Important links for Linux commands help

https://www.thegeekstuff.com/
https://explainshell.com/
Important Files and Directories - http://www.dba-oracle.com/linux/important_files_directories.htm

-------------------------------------------------------------------------
Earlier companies began develping their own flavor of Unix OS --

1) IBM - AIX
2) SUN - Solaris
3) HP - UX

Various Linux distributions available nowadays --

1) Red-Hat Linux
2) Fedora
3) Debian
4) Ubuntu
5) Cent-OS
6) Linux Mint
7) OpenSUSE / SUSE Linux Enterprise


-------------------------------------------------------------------------
Case sensitivity in Linux

When interacting with the Unix/Linux operating system, one of the first things you need to know is that, unlike other computer systems you may be accustomed to, everything in Unix is case-sensitive. Be careful when you're typing in commands - whether a character is upper or lower case does make a difference.

[ec2-user@ip-172-31-36-254 sample]$ LS -LTR
-bash: LS: command not found

-------------------------------------------------------------------------
Help Commands in Linux-- 

1) whatis <Command>
2) <Command> --help
3) man <Command>
4) info <Command>

-------------------------------------------------------------------------
Linux Repositories --

Stable versions of most software will already be available in Linux Repositories

Commands to install them 

For RHEL-based systems

yum command installs packages from URLs defined in Linux Repositories.
Linux repositories config files are defined under directory - /etc/yum.repos.d/
Urls are defined here from where yum can download and install pkgs.
yum needs the Internet connection.
In some companies, internet access is not allowed. In that case, repos are setup locally on another server within the same nw.
yum downloads, installs, verifies and cleans pkgs on the system.
 
sudo yum install <package-name>

[ec2-user@ip-172-31-36-254 yum.repos.d]$ sudo yum install httpd
Last metadata expiration check: 2:03:33 ago on Tue 22 Sep 2020 03:03:26 AM UTC.
Dependencies resolved.
============================================================================================================================================================================
 Package                              Architecture             Version                                                   Repository                                    Size
============================================================================================================================================================================
Installing:
 httpd                                x86_64                   2.4.37-21.module+el8.2.0+5008+cca404a3                    rhel-8-appstream-rhui-rpms                   1.4 M
Installing dependencies:
 apr                                  x86_64                   1.6.3-9.el8                                               rhel-8-appstream-rhui-rpms                   125 k
 apr-util                             x86_64                   1.6.1-6.el8                                               rhel-8-appstream-rhui-rpms                   105 k
 httpd-filesystem                     noarch                   2.4.37-21.module+el8.2.0+5008+cca404a3                    rhel-8-appstream-rhui-rpms                    36 k
 httpd-tools                          x86_64                   2.4.37-21.module+el8.2.0+5008+cca404a3                    rhel-8-appstream-rhui-rpms                   103 k
 mailcap                              noarch                   2.1.48-3.el8                                              rhel-8-baseos-rhui-rpms                       39 k
 mod_http2                            x86_64                   1.11.3-3.module+el8.2.0+7758+84b4ca3e.1                   rhel-8-appstream-rhui-rpms                   156 k
 redhat-logos-httpd                   noarch                   81.1-1.el8                                                rhel-8-baseos-rhui-rpms                       26 k
Installing weak dependencies:
 apr-util-bdb                         x86_64                   1.6.1-6.el8                                               rhel-8-appstream-rhui-rpms                    25 k
 apr-util-openssl                     x86_64                   1.6.1-6.el8                                               rhel-8-appstream-rhui-rpms                    27 k
Enabling module streams:
 httpd                                                         2.4

Transaction Summary
============================================================================================================================================================================
Install  10 Packages

Total download size: 2.0 M
Installed size: 5.5 M
Is this ok [y/N]: y
Downloading Packages:
(1/10): apr-util-openssl-1.6.1-6.el8.x86_64.rpm                                                                                             223 kB/s |  27 kB     00:00
(2/10): apr-util-bdb-1.6.1-6.el8.x86_64.rpm                                                                                                 197 kB/s |  25 kB     00:00
(3/10): apr-util-1.6.1-6.el8.x86_64.rpm                                                                                                     820 kB/s | 105 kB     00:00
(4/10): apr-1.6.3-9.el8.x86_64.rpm                                                                                                          1.1 MB/s | 125 kB     00:00
(5/10): httpd-filesystem-2.4.37-21.module+el8.2.0+5008+cca404a3.noarch.rpm                                                                  286 kB/s |  36 kB     00:00
(6/10): httpd-2.4.37-21.module+el8.2.0+5008+cca404a3.x86_64.rpm                                                                             9.3 MB/s | 1.4 MB     00:00
(7/10): httpd-tools-2.4.37-21.module+el8.2.0+5008+cca404a3.x86_64.rpm                                                                       1.0 MB/s | 103 kB     00:00
(8/10): mod_http2-1.11.3-3.module+el8.2.0+7758+84b4ca3e.1.x86_64.rpm                                                                        1.4 MB/s | 156 kB     00:00
(9/10): mailcap-2.1.48-3.el8.noarch.rpm                                                                                                     404 kB/s |  39 kB     00:00
(10/10): redhat-logos-httpd-81.1-1.el8.noarch.rpm                                                                                           277 kB/s |  26 kB     00:00
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Total                                                                                                                                       2.6 MB/s | 2.0 MB     00:00
Running transaction check
Transaction check succeeded.
Running transaction test
Transaction test succeeded.
Running transaction
  Preparing        :                                                                                                                                                    1/1
  Installing       : apr-1.6.3-9.el8.x86_64                                                                                                                            1/10
  Running scriptlet: apr-1.6.3-9.el8.x86_64                                                                                                                            1/10
  Installing       : apr-util-openssl-1.6.1-6.el8.x86_64                                                                                                               2/10
  Installing       : apr-util-1.6.1-6.el8.x86_64                                                                                                                       3/10
  Running scriptlet: apr-util-1.6.1-6.el8.x86_64                                                                                                                       3/10
  Installing       : apr-util-bdb-1.6.1-6.el8.x86_64                                                                                                                   4/10
  Installing       : httpd-tools-2.4.37-21.module+el8.2.0+5008+cca404a3.x86_64                                                                                         5/10
  Installing       : redhat-logos-httpd-81.1-1.el8.noarch                                                                                                              6/10
  Installing       : mailcap-2.1.48-3.el8.noarch                                                                                                                       7/10
  Running scriptlet: httpd-filesystem-2.4.37-21.module+el8.2.0+5008+cca404a3.noarch                                                                                    8/10
  Installing       : httpd-filesystem-2.4.37-21.module+el8.2.0+5008+cca404a3.noarch                                                                                    8/10
  Installing       : mod_http2-1.11.3-3.module+el8.2.0+7758+84b4ca3e.1.x86_64                                                                                          9/10
  Installing       : httpd-2.4.37-21.module+el8.2.0+5008+cca404a3.x86_64                                                                                              10/10
  Running scriptlet: httpd-2.4.37-21.module+el8.2.0+5008+cca404a3.x86_64                                                                                              10/10
  Verifying        : apr-util-bdb-1.6.1-6.el8.x86_64                                                                                                                   1/10
  Verifying        : apr-util-openssl-1.6.1-6.el8.x86_64                                                                                                               2/10
  Verifying        : apr-util-1.6.1-6.el8.x86_64                                                                                                                       3/10
  Verifying        : httpd-2.4.37-21.module+el8.2.0+5008+cca404a3.x86_64                                                                                               4/10
  Verifying        : httpd-filesystem-2.4.37-21.module+el8.2.0+5008+cca404a3.noarch                                                                                    5/10
  Verifying        : apr-1.6.3-9.el8.x86_64                                                                                                                            6/10
  Verifying        : httpd-tools-2.4.37-21.module+el8.2.0+5008+cca404a3.x86_64                                                                                         7/10
  Verifying        : mod_http2-1.11.3-3.module+el8.2.0+7758+84b4ca3e.1.x86_64                                                                                          8/10
  Verifying        : mailcap-2.1.48-3.el8.noarch                                                                                                                       9/10
  Verifying        : redhat-logos-httpd-81.1-1.el8.noarch                                                                                                             10/10

Installed:
  apr-1.6.3-9.el8.x86_64                                                             apr-util-1.6.1-6.el8.x86_64
  apr-util-bdb-1.6.1-6.el8.x86_64                                                    apr-util-openssl-1.6.1-6.el8.x86_64
  httpd-2.4.37-21.module+el8.2.0+5008+cca404a3.x86_64                                httpd-filesystem-2.4.37-21.module+el8.2.0+5008+cca404a3.noarch
  httpd-tools-2.4.37-21.module+el8.2.0+5008+cca404a3.x86_64                          mailcap-2.1.48-3.el8.noarch
  mod_http2-1.11.3-3.module+el8.2.0+7758+84b4ca3e.1.x86_64                           redhat-logos-httpd-81.1-1.el8.noarch

Complete!


update command just updates links 
sudo yum update

rmp (Red Hat pkg manager) - When pkg is already downloaded in the system, then rpm is used to install it locally.
for rpm Internet access is not required.

List of all pkgs installed on system - 
rpm -qa

Number of pkgs installed on system - 
[ec2-user@ip-172-31-36-254 yum.repos.d]$ rpm -qa | wc -l
418

Check if 'bind' pkg is installed
[ec2-user@ip-172-31-36-254 yum.repos.d]$ rpm -qa | grep bind
bind-export-libs-9.11.13-3.el8.x86_64

No 'bind' is not installed, so install it using yum 

[ec2-user@ip-172-31-36-254 yum.repos.d]$ sudo  yum install bind
Last metadata expiration check: 2:08:23 ago on Tue 22 Sep 2020 03:03:26 AM UTC.
Dependencies resolved.
============================================================================================================================================================================
 Package                               Architecture                  Version                                        Repository                                         Size
============================================================================================================================================================================
Installing:
 bind                                  x86_64                        32:9.11.13-6.el8_2.1                           rhel-8-appstream-rhui-rpms                        2.1 M
Installing dependencies:
 bind-libs                             x86_64                        32:9.11.13-6.el8_2.1                           rhel-8-appstream-rhui-rpms                        172 k
 bind-libs-lite                        x86_64                        32:9.11.13-6.el8_2.1                           rhel-8-appstream-rhui-rpms                        1.2 M
 bind-license                          noarch                        32:9.11.13-6.el8_2.1                           rhel-8-appstream-rhui-rpms                        101 k

Transaction Summary
============================================================================================================================================================================
Install  4 Packages

Total download size: 3.5 M
Installed size: 7.7 M
Is this ok [y/N]: y

Once 'bind' installation is complete, then check again

[ec2-user@ip-172-31-36-254 yum.repos.d]$ rpm -qa | grep bind
bind-libs-lite-9.11.13-6.el8_2.1.x86_64
bind-export-libs-9.11.13-3.el8.x86_64
bind-license-9.11.13-6.el8_2.1.noarch
bind-libs-9.11.13-6.el8_2.1.x86_64
bind-9.11.13-6.el8_2.1.x86_64

To remove installed pkg, use below command
rpm -e <pkg-name> OR
yum remove <pkg-name>


[ec2-user@ip-172-31-36-254 yum.repos.d]$ sudo rpm -e bind-9.11.13-6.el8_2.1.x86_64

[ec2-user@ip-172-31-36-254 yum.repos.d]$ rpm -qa | grep bind
bind-libs-lite-9.11.13-6.el8_2.1.x86_64
bind-export-libs-9.11.13-3.el8.x86_64
bind-license-9.11.13-6.el8_2.1.noarch
bind-libs-9.11.13-6.el8_2.1.x86_64

[ec2-user@ip-172-31-36-254 yum.repos.d]$ sudo yum remove bind-32:9.11.13-6.el8_2.1.x86_64
Dependencies resolved.
============================================================================================================================================================================
 Package                               Architecture                  Version                                       Repository                                          Size
============================================================================================================================================================================
Removing:
 bind                                  x86_64                        32:9.11.13-6.el8_2.1                          @rhel-8-appstream-rhui-rpms                        4.5 M
Removing unused dependencies:
 bind-libs                             x86_64                        32:9.11.13-6.el8_2.1                          @rhel-8-appstream-rhui-rpms                        198 k
 bind-libs-lite                        x86_64                        32:9.11.13-6.el8_2.1                          @rhel-8-appstream-rhui-rpms                        3.0 M
 bind-license                          noarch                        32:9.11.13-6.el8_2.1                          @rhel-8-appstream-rhui-rpms                         29 k

Transaction Summary
============================================================================================================================================================================
Remove  4 Packages

Freed space: 7.7 M
Is this ok [y/N]: y
Running transaction check
Transaction check succeeded.
Running transaction test
Transaction test succeeded.
Running transaction
  Preparing        :                                                                                                                                                    1/1
  Running scriptlet: bind-32:9.11.13-6.el8_2.1.x86_64                                                                                                                   1/1
  Running scriptlet: bind-32:9.11.13-6.el8_2.1.x86_64                                                                                                                   1/4
  Erasing          : bind-32:9.11.13-6.el8_2.1.x86_64                                                                                                                   1/4
  Running scriptlet: bind-32:9.11.13-6.el8_2.1.x86_64                                                                                                                   1/4
  Erasing          : bind-libs-32:9.11.13-6.el8_2.1.x86_64                                                                                                              2/4
  Erasing          : bind-libs-lite-32:9.11.13-6.el8_2.1.x86_64                                                                                                         3/4
  Erasing          : bind-license-32:9.11.13-6.el8_2.1.noarch                                                                                                           4/4
  Running scriptlet: bind-license-32:9.11.13-6.el8_2.1.noarch                                                                                                           4/4
  Verifying        : bind-32:9.11.13-6.el8_2.1.x86_64                                                                                                                   1/4
  Verifying        : bind-libs-32:9.11.13-6.el8_2.1.x86_64                                                                                                              2/4
  Verifying        : bind-libs-lite-32:9.11.13-6.el8_2.1.x86_64                                                                                                         3/4
  Verifying        : bind-license-32:9.11.13-6.el8_2.1.noarch                                                                                                           4/4

Removed:
  bind-32:9.11.13-6.el8_2.1.x86_64     bind-libs-32:9.11.13-6.el8_2.1.x86_64     bind-libs-lite-32:9.11.13-6.el8_2.1.x86_64     bind-license-32:9.11.13-6.el8_2.1.noarch

Complete!



yum also installs transitive dependencies for a package. Whereas rpm do not.
If you have already downloaded a pkg in system, you can install it using rpm as below -

rpm -hiv <Absolute-pkg-path>

For Debian-based systems

sudo apt-gel install <package-name>

For Fedora-based systems

sudo dnf install <package-name>

-------------------------------------------------------------------------
Linux Important Files/Directories --

/home/<user>/.bash_history - File where history of shell commands is saved for <user>

A typical Linux system has, among others, the following directories:

       /      This is the root directory.  This is where the whole tree starts.

       /bin   This directory contains executable programs which are needed in single user mode and to bring the system up or repair it.

       /sbin  Like /bin, this directory holds commands needed to boot the system, but which are usually not executed by normal users.

       /usr   This directory is usually mounted from a separate partition.  It should hold only sharable, read-only data, so that it can be mounted by various machines running  Linux.

       /usr/bin
              This is the primary directory for executable programs.  Most programs executed by normal users which are not needed for booting or for repairing the system and which are
              not installed locally should be placed in this directory.

       /usr/sbin
              This directory contains program binaries for system administration which are not essential for the boot process, for mounting /usr, or for system repair.
			  
Linux repositories (for yum) config files are defined under directory - /etc/yum.repos.d/. Urls are defined here from where yum should install pkgs.

/etc/sudoers - sudoers file

The sudoers file is a file Linux and Unix administrators use to allocate system rights to system users. This allows the administrator to control who does what. Remember, Linux is built with security in mind. When you want to run a command that requires root rights, Linux checks your username against the sudoers file. This happens when you type the command “sudo”. If it determines, that your username is not on the list, you cannot run the command/program logged in as that user. 


/etc/passwd - This file contains user information of all existing users 
username,userid,groupid,user description, home directory, shell etc.
This file's name is passwd but there is no password in it. :)

/etc/group - This file contains information of all exisiting groups
groupname, groupid, group members

/etc/shadow - Password details of all existing users 
Encrypted passwords of all existing users along with other pssword parameters like password expiration time etc.

/etc/redhat-release - OS release information

/var/log/messages - This file has all the global system messages located inside, including the messages that are logged during system startup. Depending on how the syslog config file is sent up, there are several things that are logged in this file including mail, cron, daemon, kern, auth, etc.

/etc/hosts - Add hostname for IP address 

<Hostname> <IP-address>

master <IP-address>
slave <IP-address>

ssh - Secure shell for remote machine access (Using hostnames defined in /etc/hosts)

ssh <Hostname> OR
ssh <IP-address>

ssh master
ssh slave

/etc/environment - Use this file to set up system-wide environment variables. 
/etc/environment is used for setting variables for programs which are usually not started from a shell.

Variables in this file are set in the following format:
FOO=bar
VAR_TEST="Test Var"

/etc/profile - Variables set in this file are loaded whenever a bash login shell is entered.
For programs which are started from a shell.

Variables in this file are set in the following format:
export JAVA_HOME="/path/to/java/home"
export PATH=$PATH:$JAVA_HOME/bin

/home/<user>/.bashrc - User shell specific environment 

Variables in this file are set in the following format:
export PATH="$HOME/bin:$PATH"

Set environment variables
sudo gedit .bashrc

To load the new environment variables into the current shell/terminal session, use the source command.
source .bashrc


Environment variables control the behavior of the software packages installed in Linux.

printenv - prints the list of all environment variables

when the bash is invoked as an interactive shell, it first reads and executes commands from /etc/profile. If /etc/profile doesn’t exist, it reads and executes the commands from ~/.bash_profile, ~/.bash_login and ~/.profile in the given order. The –noprofile option may be used when the shell is started to inhibit this behavior.

Typically your bash_profile executes ~/.bashrc. If you like, you can show a welcome message. This only runs when you first log in. You can export the variables whatever you want, and you can set the aliases which will be running and available once you opened the shell. When a login shell exits, Bash reads and executes commands from the file ~/.bash_logout.


[ec2-user@ip-172-31-36-254 ~]$ printenv
SSH_CONNECTION=75.64.225.206 62712 172.31.36.254 22
LANG=en_US.UTF-8
HISTCONTROL=ignoredups
HOSTNAME=ip-172-31-36-254.us-east-2.compute.internal
XDG_SESSION_ID=16
USER=ec2-user
SELINUX_ROLE_REQUESTED=
PWD=/home/ec2-user
HOME=/home/ec2-user
SSH_CLIENT=75.64.225.206 62712 22
SELINUX_LEVEL_REQUESTED=
SSH_TTY=/dev/pts/0
MAIL=/var/spool/mail/ec2-user
TERM=xterm
SHELL=/bin/bash
SELINUX_USE_CURRENT_RANGE=
SHLVL=1
LOGNAME=ec2-user
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus
XDG_RUNTIME_DIR=/run/user/1000
PATH=/home/ec2-user/.local/bin:/home/ec2-user/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin
HISTSIZE=1000
LESSOPEN=||/usr/bin/lesspipe.sh %s
_=/usr/bin/printenv


echo - Print specific env variable

HOME - Path of home directory of the user
[ec2-user@ip-172-31-36-254 ~]$ echo $HOME
/home/ec2-user

LANG - Language being used
[ec2-user@ip-172-31-36-254 ~]$ echo $LANG
en_US.UTF-8

BASH_VERSION - The version of this instance of bash
[ec2-user@ip-172-31-36-254 ~]$ echo $BASH_VERSION
4.4.19(1)-release

PATH - It is a colon-separated list of directories in which the shell looks for commands
[ec2-user@ip-172-31-36-254 ~]$ echo $PATH
/home/ec2-user/.local/bin:/home/ec2-user/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin

[ec2-user@ip-172-31-36-254 ~]$ echo {a..z}
a b c d e f g h i j k l m n o p q r s t u v w x y z

[ec2-user@ip-172-31-36-254 ~]$ echo {33..45}
33 34 35 36 37 38 39 40 41 42 43 44 45

[ec2-user@ip-172-31-36-254 ~]$ echo a{33..56}
a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 a52 a53 a54 a55 a56

[ec2-user@ip-172-31-36-254 ~]$ echo a{33..56}p
a33p a34p a35p a36p a37p a38p a39p a40p a41p a42p a43p a44p a45p a46p a47p a48p a49p a50p a51p a52p a53p a54p a55p a56p


/usr/bin - Scripts for all the build-in commands

[ec2-user@ip-172-31-36-254 sample]$ which date
/usr/bin/date
 
-------------------------------------------------------------------------
Finding System information in Linux --

[ec2-user@ip-172-31-36-254 sample]$ cat /etc/redhat-release
Red Hat Enterprise Linux release 8.2 (Ootpa)

uname - print system information
a - all

[ec2-user@ip-172-31-36-254 sample]$ uname -a
Linux ip-172-31-36-254.us-east-2.compute.internal 4.18.0-193.el8.x86_64 #1 SMP Fri Mar 27 14:35:58 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux

[ec2-user@ip-172-31-36-254 sample]$ hostname
ip-172-31-36-254.us-east-2.compute.internal

dmidecode  is a tool for dumping a computer's DMI (some say SMBIOS) table contents in a human-readable format. This table contains a description of the system's
hardware components, as well as other useful pieces of information such as serial numbers and BIOS revision.

[ec2-user@ip-172-31-36-254 sample]$ sudo dmidecode | more
# dmidecode 3.2
Getting SMBIOS data from sysfs.
SMBIOS 2.7 present.
11 structures occupying 359 bytes.
Table at 0x000EB01F.

Handle 0x0000, DMI type 0, 24 bytes
BIOS Information
        Vendor: Xen
        Version: 4.2.amazon
        Release Date: 08/24/2006
        Address: 0xE8000
        Runtime Size: 96 kB
        ROM Size: 64 kB
        Characteristics:
                PCI is supported
                EDD is supported
                Targeted content distribution is supported
        BIOS Revision: 4.2

Handle 0x0100, DMI type 1, 27 bytes
System Information
        Manufacturer: Xen
        Product Name: HVM domU
        Version: 4.2.amazon
        Serial Number: ec2930e4-e2fd-b0fc-3654-ae7fa38c420d
        UUID: ec2930e4-e2fd-b0fc-3654-ae7fa38c420d
        Wake-up Type: Power Switch
        SKU Number: Not Specified
 
-------------------------------------------------------------------------
Linux File Editors --

vi - available in almost all Linux distributions
ed - Standard line editor
ex - Extended line editor
emacs - Full screen editor
pico - Beginner's editor
vim - Improved vi
gedit - Text Editor (gedit) is the default GUI text editor in the Ubuntu operating system
nano


Basic vi commands -- 

Reference1 - https://www.fprintf.net/vimCheatSheet.html
Reference2 - https://www.cs.colostate.edu/helpdocs/vi.html
Reference3 - https://docs.oracle.com/cd/E19683-01/806-7612/editorvi-43/index.html
Reference4 - https://www.thegeekstuff.com/2009/03/8-essential-vim-editor-navigation-fundamentals/

Editing in vi

i - insert mode
a - append text
r - replace
u -	UNDO WHATEVER YOU JUST DID; a simple toggle


Deletion in vi

dw - delete the single word beginning with character under cursor
dNw - delete N words beginning with character under cursor;
dd - delete a line
Ndd or dNd - delete N lines, beginning with the current line;
D - delete the remainder of the line, starting with current cursor positio
x - delete a character

Cutting and pasting text

yy	- copy (yank, cut) the current line into the buffer
Nyy or yNy -	copy (yank, cut) the next N lines, including the current line, into the buffer
p -	put (paste) the line(s) in the buffer into the text after the current line

Other commands

Esc - Escape out of any mode

Sometimes ! is used at the end of below commands to overide read-only flag for the file

:q - Quit - Will promp for unsaved changes. Will quit if no unsaved changes
:wq - Write and quit - shift zz or ZZ also does the same
:q! - quit without saving - ZQ also does the same
:w - Write/save without quitting
:r filename - read file named filename and insert after current line (the line with cursor)
:w newfile -  write current contents to a new file named newfile

File navigation

0 – move cursor to start of current line
$ – move cursor to end of current line
w -	move cursor to beginning of next word
b -	move cursor back to beginning of preceding word
o -	Begin a new line below the cursor and insert text.
O -	Begin a new line above the cursor and insert text.

1G OR g – Go to the beginning of the file.
shift g OR G – Go to the end of the file.
NG – Go to the Nth line of the file

Search 

/pattern – Search for a pattern which will you take you to the next occurrence of it.
?pattern – Search for a pattern which will you take you to the previous occurrence of it.
n -	move to next occurrence of search string
N -	move to next occurrence of search string in opposite direction


vi -r filename	recover filename that was being edited when system crashed

-------------------------------------------------------------------------
Changing Password -- 

[ec2-user@ip-172-31-36-254 ~]$ passwd ec2-user
passwd: Only root can specify a user name.

Changing password for currently logged-in user -

[ec2-user@ip-172-31-36-254 ~]$ passwd
Changing password for user ec2-user.
Current password:

As a root user, you can change password for other users -

[ec2-user@ip-172-31-36-254 ~]$ su -
Password:
Last login: Fri Sep 18 21:11:02 UTC 2020 on pts/0
[root@ip-172-31-36-254 ~]# passwd ec2-user
Changing password for user ec2-user.
New password:

Changing password for the user 'root' -

[root@ip-172-31-36-254 ~]# passwd
Changing password for user root.
New password:

-------------------------------------------------------------------------
Creating/Deleting Users --

Below operations need root/super access 

Add a new user - When a new user is created, a primary group with same name is created too and a user is added to that group.
sudo useradd <user-name>

useradd -g superheros -s /bin/bash -c "User Description" -m -d /home/spiderman spiderman
-g - Group
-c - User Description
-s - Shell
-m - Create the user's home directory if it does not exist.
-d - home directory for the user

How to check if user is created succesfuly - id command

[ec2-user@ip-172-31-36-254 sample]$ id ec1-user
uid=1002(ec1-user) gid=1002(ec1-user) groups=1002(ec1-user)


Set password for other user
sudo passwd <user-name>

Delete a user
sudo userdel <user-name>

userdel -r - Files in the user's home directory will be removed along with the home directory itself and the user's mail spool.


Creating/Deleting Groups --

sudo groupadd <Group-name>

How to check if a group is created succesfuly - cat /etc/group

[ec2-user@ip-172-31-36-254 sample]$ cat /etc/group
root:x:0:
bin:x:1:
daemon:x:2:
sys:x:3:
adm:x:4:ec2-user
tty:x:5:
disk:x:6:
lp:x:7:
mem:x:8:
kmem:x:9:
wheel:x:10:
cdrom:x:11:
mail:x:12:
man:x:15:
dialout:x:18:
floppy:x:19:
games:x:20:
tape:x:33:
video:x:39:
ftp:x:50:
lock:x:54:
audio:x:63:
users:x:100:
nobody:x:65534:
dbus:x:81:
utmp:x:22:
utempter:x:35:
input:x:999:
kvm:x:36:
render:x:998:
systemd-journal:x:190:ec2-user
systemd-coredump:x:997:
systemd-resolve:x:193:
tss:x:59:
polkitd:x:996:
unbound:x:995:
ssh_keys:x:994:
sssd:x:993:
sshd:x:74:
chrony:x:992:
rngd:x:991:
ec2-user:x:1000:
newuser:x:1001:
ec1-user:x:1002:


sudo groupdel <Group-name>

Add an existing user to an existing group
sudo usermod -g <Group-name> <user-name> 


-------------------------------------------------------------------------
Linux basic commands --

Linux provides a CLI (Command Line Interface) to communicate with the OS.

pwd - Print working Directory

[ec2-user@ip-172-31-36-254 ~]$ pwd
/home/ec2-user

cd - Change Directory

[ec2-user@ip-172-31-36-254 ~]$ cd /usr/bin/
[ec2-user@ip-172-31-36-254 bin]$

Change Directory to home directory

[ec2-user@ip-172-31-36-254 bin]$ cd
[ec2-user@ip-172-31-36-254 ~]$

~ represents the home directory

[ec2-user@ip-172-31-36-254 bin]$ cd ~
[ec2-user@ip-172-31-36-254 ~]$

Change Directory to the parent directory

[ec2-user@ip-172-31-36-254 ~]$ cd ..
[ec2-user@ip-172-31-36-254 home]$

Tab key autofills commands unless there is naming conflict. It gives possible options in case of naming conflict.
Using up and down arrows keys, you can browse through command history on shell.

[ec2-user@ip-172-31-36-254 home]$ cd ec2

pressing Tab key will autofill the command

[ec2-user@ip-172-31-36-254 home]$ cd ec2-user/

If there are spaces in file or directory name, it can be accessed in 2 ways below - 

[ec2-user@ip-172-31-36-254 sample]$ ls -ltr
total 4
-rw-rw-r--. 1 ec2-user ec2-user 26 Sep 18 21:49 'Adv Parent Topics'
[ec2-user@ip-172-31-36-254 sample]$ vi Adv\ Parent\ Topics
[ec2-user@ip-172-31-36-254 sample]$ vi 'Adv Parent Topics'

Clear command is used to clear the terminal screen. Contents will not be deleted but scrolled down.

[ec2-user@ip-172-31-36-254 sample]$ clear
[ec2-user@ip-172-31-36-254 sample]$


echo command writes its arguments to standard output.

[ec2-user@ip-172-31-36-254 sample]$ echo This is USA
This is USA

[ec2-user@ip-172-31-36-254 sample]$ x=200
[ec2-user@ip-172-31-36-254 sample]$ echo This is USA $x
This is USA 200

Who is the logged-in user -- 

[ec2-user@ip-172-31-36-254 sample]$ whoami
ec2-user

[ec2-user@ip-172-31-36-254 sample]$ who am i
ec2-user pts/0        2020-09-18 21:10 (75.64.225.206)

Exit - To logout of the session

[ec2-user@ip-172-31-36-254 sample]$ exit
logout

-------------------------------------------------------------------------
Switching users -- 

su <username> - Switch to a different user

[ec2-user@ip-172-31-36-254 sample]$ su - ec1-user
Password:
[ec1-user@ip-172-31-36-254 ~]$

'-' is optional

[ec2-user@ip-172-31-36-254 sample]$ su  ec1-user
Password:
[ec1-user@ip-172-31-36-254 sample]$

su without argument - Switch to root user

[ec1-user@ip-172-31-36-254 sample]$ su
Password:
[root@ip-172-31-36-254 sample]#

'#' after prompt indicates the root user

-------------------------------------------------------------------------
sudo - Executes a particular command with root/super user privileges

sudoers file - /etc/sudoers


Accessing file /etc/ssh/sshd_config needs super privileges 

ec1-user is NOT present in the sudoers file

[ec1-user@ip-172-31-36-254 sample]$ sudo cat /etc/ssh/sshd_config

We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:

    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.

[sudo] password for ec1-user:
ec1-user is not in the sudoers file.  This incident will be reported.
[ec1-user@ip-172-31-36-254 sample]$

ec2-user is present in the sudoers file - sudo is successful!

[ec2-user@ip-172-31-36-254 sample]$ sudo cat /etc/ssh/sshd_config
#       $OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

-------------------------------------------------------------------------
Linux File System -- ext3, ext4 and XFS

[ec2-user@ip-172-31-36-254 ~]$ cd /

[ec2-user@ip-172-31-36-254 /]$ ls
bin  boot  data  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var

ll - Gives same result as ls -l

[ec2-user@ip-172-31-36-254 /]$ ls -l
total 16

TYPE - # of links - Owner - Group - Block Size (bytes) - Month modified - Day modified - Time modified - Name

lrwxrwxrwx.  1 root root    7 Aug 12  2018 bin -> usr/bin
dr-xr-xr-x.  5 root root 4096 Sep 18 17:05 boot
drwxr-xr-x.  2 root root    6 Apr 23 05:19 data
drwxr-xr-x. 18 root root 2720 Sep 18 17:04 dev
drwxr-xr-x. 84 root root 8192 Sep 18 21:10 etc
drwxr-xr-x.  4 root root   37 Sep 18 17:58 home
lrwxrwxrwx.  1 root root    7 Aug 12  2018 lib -> usr/lib
lrwxrwxrwx.  1 root root    9 Aug 12  2018 lib64 -> usr/lib64
drwxr-xr-x.  2 root root    6 Aug 12  2018 media
drwxr-xr-x.  2 root root    6 Aug 12  2018 mnt
drwxr-xr-x.  2 root root    6 Aug 12  2018 opt
dr-xr-xr-x. 97 root root    0 Sep 18 17:03 proc
dr-xr-x---.  3 root root  170 Sep 18 17:59 root
drwxr-xr-x. 23 root root  660 Sep 18 17:05 run
lrwxrwxrwx.  1 root root    8 Aug 12  2018 sbin -> usr/sbin
drwxr-xr-x.  2 root root    6 Aug 12  2018 srv
dr-xr-xr-x. 13 root root    0 Sep 18 17:03 sys
drwxrwxrwt.  8 root root  172 Sep 18 20:16 tmp
drwxr-xr-x. 12 root root  144 Apr 23 05:13 usr
drwxr-xr-x. 20 root root  278 Sep 18 17:03 var

-------------------------------------------------------------------------
Directory Listing - ls [options] file | Directory

ls - Lists all the contents in the current working directory

[ec2-user@ip-172-31-36-254 /]$ ls
bin  boot  data  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var

1 - List one file per line.

[ec2-user@ip-172-31-36-254 /]$ ls -1
bin
boot
data
dev
etc
home
lib
lib64
media
mnt
opt
proc
root
run
sbin
srv
sys
tmp
usr
var


l - Listing in long format

[ec2-user@ip-172-31-36-254 /]$ ls -l
total 16
lrwxrwxrwx.  1 root root    7 Aug 12  2018 bin -> usr/bin
dr-xr-xr-x.  5 root root 4096 Sep 18 17:05 boot
drwxr-xr-x.  2 root root    6 Apr 23 05:19 data
drwxr-xr-x. 18 root root 2720 Sep 18 17:04 dev
drwxr-xr-x. 84 root root 8192 Sep 18 22:05 etc
drwxr-xr-x.  5 root root   53 Sep 18 22:04 home
lrwxrwxrwx.  1 root root    7 Aug 12  2018 lib -> usr/lib
lrwxrwxrwx.  1 root root    9 Aug 12  2018 lib64 -> usr/lib64
drwxr-xr-x.  2 root root    6 Aug 12  2018 media
drwxr-xr-x.  2 root root    6 Aug 12  2018 mnt
drwxr-xr-x.  2 root root    6 Aug 12  2018 opt
dr-xr-xr-x. 93 root root    0 Sep 18 17:03 proc
dr-xr-x---.  3 root root  170 Sep 18 17:59 root
drwxr-xr-x. 23 root root  660 Sep 18 17:05 run
lrwxrwxrwx.  1 root root    8 Aug 12  2018 sbin -> usr/sbin
drwxr-xr-x.  2 root root    6 Aug 12  2018 srv
dr-xr-xr-x. 13 root root    0 Sep 18 17:03 sys
drwxrwxrwt.  8 root root  172 Sep 18 20:16 tmp
drwxr-xr-x. 12 root root  144 Apr 23 05:13 usr
drwxr-xr-x. 20 root root  278 Sep 18 17:03 var

ls <Path> - Listing of directory or file in <Path> argument

[ec2-user@ip-172-31-36-254 /]$ ls -l etc
total 1052
-rw-r--r--.  1 root root       16 Apr 23 05:18 adjtime
-rw-r--r--.  1 root root     1529 Oct 30  2019 aliases
drwxr-xr-x.  2 root root      129 Apr 23 05:14 alternatives
-rw-r--r--.  1 root root      541 Jun 12  2019 anacrontab
drwxr-x---.  4 root root      100 Sep 18 17:03 audit
drwxr-xr-x.  3 root root      228 Apr 23 05:18 authselect
drwxr-xr-x.  2 root root       56 Apr 23 05:14 bash_completion.d
-rw-r--r--.  1 root root     3019 Oct 30  2019 bashrc
-rw-r--r--.  1 root root      429 Jul 24  2019 bindresvport.blacklist
drwxr-xr-x.  2 root root        6 Apr 15 14:51 binfmt.d

[ec2-user@ip-172-31-36-254 etc]$ ls -l adjtime
-rw-r--r--. 1 root root 16 Apr 23 05:18 adjtime

ls -la - Lists all files/directories along with hidden files/directories
Hidden files/directories start with '.'

[ec2-user@ip-172-31-36-254 etc]$ ls -la
total 1068
drwxr-xr-x. 84 root root     8192 Sep 18 22:05 .
dr-xr-xr-x. 18 root root      236 Apr 23 05:19 ..
-rw-r--r--.  1 root root       16 Apr 23 05:18 adjtime
-rw-r--r--.  1 root root     1529 Oct 30  2019 aliases


ls -lS     sort by file size, largest first

[ec2-user@ip-172-31-36-254 /]$ ls -lS
total 16
drwxr-xr-x. 84 root root 8192 Sep 18 22:05 etc
dr-xr-xr-x.  5 root root 4096 Sep 18 17:05 boot
drwxr-xr-x. 18 root root 2720 Sep 18 17:04 dev
drwxr-xr-x. 23 root root  660 Sep 18 17:05 run
drwxr-xr-x. 20 root root  278 Sep 18 17:03 var
drwxrwxrwt.  8 root root  172 Sep 18 20:16 tmp
dr-xr-x---.  3 root root  170 Sep 18 17:59 root
drwxr-xr-x. 12 root root  144 Apr 23 05:13 usr
drwxr-xr-x.  5 root root   53 Sep 18 22:04 home
lrwxrwxrwx.  1 root root    9 Aug 12  2018 lib64 -> usr/lib64

ls -lSr     sort by file size, smallest first (r for reverse)

[ec2-user@ip-172-31-36-254 /]$ ls -lS
total 16
drwxr-xr-x. 84 root root 8192 Sep 18 22:05 etc
dr-xr-xr-x.  5 root root 4096 Sep 18 17:05 boot
drwxr-xr-x. 18 root root 2720 Sep 18 17:04 dev
drwxr-xr-x. 23 root root  660 Sep 18 17:05 run
drwxr-xr-x. 20 root root  278 Sep 18 17:03 var
drwxrwxrwt.  8 root root  172 Sep 18 20:16 tmp
dr-xr-x---.  3 root root  170 Sep 18 17:59 root
drwxr-xr-x. 12 root root  144 Apr 23 05:13 usr
drwxr-xr-x.  5 root root   53 Sep 18 22:04 home
lrwxrwxrwx.  1 root root    9 Aug 12  2018 lib64 -> usr/lib64
lrwxrwxrwx.  1 root root    8 Aug 12  2018 sbin -> usr/sbin
lrwxrwxrwx.  1 root root    7 Aug 12  2018 bin -> usr/bin
lrwxrwxrwx.  1 root root    7 Aug 12  2018 lib -> usr/lib
drwxr-xr-x.  2 root root    6 Apr 23 05:19 data

ls -lt - sort by modification time, newest first

[ec2-user@ip-172-31-36-254 /]$ ls -lt
total 16
drwxr-xr-x. 84 root root 8192 Sep 18 22:05 etc
drwxr-xr-x.  5 root root   53 Sep 18 22:04 home
drwxrwxrwt.  8 root root  172 Sep 18 20:16 tmp
dr-xr-x---.  3 root root  170 Sep 18 17:59 root
dr-xr-xr-x.  5 root root 4096 Sep 18 17:05 boot
drwxr-xr-x. 23 root root  660 Sep 18 17:05 run
drwxr-xr-x. 18 root root 2720 Sep 18 17:04 dev
drwxr-xr-x. 20 root root  278 Sep 18 17:03 var
dr-xr-xr-x. 13 root root    0 Sep 18 17:03 sys


ls -ltr - sort by modification time, oldest first (r for reverse)

[ec2-user@ip-172-31-36-254 /]$ ls -ltr
total 16
drwxr-xr-x.  2 root root    6 Aug 12  2018 srv
lrwxrwxrwx.  1 root root    8 Aug 12  2018 sbin -> usr/sbin
drwxr-xr-x.  2 root root    6 Aug 12  2018 opt
drwxr-xr-x.  2 root root    6 Aug 12  2018 mnt
drwxr-xr-x.  2 root root    6 Aug 12  2018 media
lrwxrwxrwx.  1 root root    9 Aug 12  2018 lib64 -> usr/lib64
lrwxrwxrwx.  1 root root    7 Aug 12  2018 lib -> usr/lib
lrwxrwxrwx.  1 root root    7 Aug 12  2018 bin -> usr/bin

ls -s - print the allocated size of each file, in blocks

[ec2-user@ip-172-31-36-254 sample]$ ls -s
total 24
4 'Adv Parent Topics'  4  demo_file1  0  Doddy         0  new-test-file-name  0  sample2.txt  4  sample4.txt
4  demo_file           4  demo_text   0  find_utility  0  sample1.txt         4  sample3.txt  0 'test-file-name '


[ec2-user@ip-172-31-36-254 sample]$ ls -1s
total 24
4 'Adv Parent Topics'
4 demo_file
4 demo_file1
4 demo_text
0 Doddy
0 find_utility
0 new-test-file-name
0 sample1.txt
0 sample2.txt
4 sample3.txt
4 sample4.txt
0 'test-file-name '


ls -i - View the inode number of the file

[ec2-user@ip-172-31-36-254 /]$ ls -i
    9404 bin    4194435 data       132 etc       9408 lib     4848570 media  12583718 opt    4194433 root       151 sbin         1 sys   8409243 usr
 4848566 boot         3 dev       9407 home       150 lib64   8410990 mnt           1 proc     11607 run        149 srv    4848571 tmp   8409217 var

With -1 option, one line per file

[ec2-user@ip-172-31-36-254 /]$ ls -i1
    9404 bin
 4848566 boot
 4194435 data
       3 dev
     132 etc
    9407 home
    9408 lib
     150 lib64
 4848570 media
 8410990 mnt
12583718 opt
       1 proc
 4194433 root
   11607 run
     151 sbin
     149 srv
       1 sys
 4848571 tmp
 8409243 usr
 8409217 var


ls -lR - recursive listing of all subdirectories in current directory

[ec2-user@ip-172-31-36-254 /]$ ls -lR
ls: cannot open directory './boot/efi/EFI/redhat': Permission denied
ls: cannot open directory './boot/grub2': Permission denied

.:
total 16
lrwxrwxrwx.  1 root root    7 Aug 12  2018 bin -> usr/bin
dr-xr-xr-x.  5 root root 4096 Sep 18 17:05 boot
drwxr-xr-x.  2 root root    6 Apr 23 05:19 data
drwxr-xr-x. 18 root root 2720 Sep 18 17:04 dev
drwxr-xr-x. 84 root root 8192 Sep 18 22:05 etc
drwxr-xr-x.  5 root root   53 Sep 18 22:04 home

./boot:
total 126920
-rw-r--r--. 1 root root   187648 Mar 27 14:47 config-4.18.0-193.el8.x86_64
drwxr-xr-x. 3 root root       17 Apr 23 05:13 efi
drwx------. 4 root root       83 Sep 18 21:13 grub2
-rw-------. 1 root root 51106328 Apr 23 05:17 initramfs-0-rescue-bb64a14c7512444f9744c3076505b65f.img
-rw-------. 1 root root 39794101 Apr 23 05:24 initramfs-4.18.0-193.el8.x86_64.img
-rw-------. 1 root root 17122411 Sep 18 17:05 initramfs-4.18.0-193.el8.x86_64kdump.img

./boot/efi:
total 0
drwxr-xr-x. 3 root root 20 Apr 23 05:13 EFI

./boot/efi/EFI:
total 0
drwx------. 2 root root 6 Dec  5  2019 redhat


ls -lh -  -h --human-readable. with -l and -s, print sizes like 1K 234M 2G etc.


[ec2-user@ip-172-31-36-254 /]$ ls -lh
total 16K
lrwxrwxrwx.  1 root root    7 Aug 12  2018 bin -> usr/bin
dr-xr-xr-x.  5 root root 4.0K Sep 18 17:05 boot
drwxr-xr-x.  2 root root    6 Apr 23 05:19 data
drwxr-xr-x. 18 root root 2.7K Sep 18 17:04 dev
drwxr-xr-x. 84 root root 8.0K Sep 18 22:05 etc


[ec2-user@ip-172-31-36-254 /]$ ls -sh
total 16K
   0 bin      0 data   12K etc      0 lib       0 media     0 opt      0 root     0 sbin     0 sys     0 usr
4.0K boot     0 dev      0 home     0 lib64     0 mnt       0 proc     0 run      0 srv      0 tmp     0 var


[ec2-user@ip-172-31-36-254 etc]$ ls -l *.conf
-rw-r--r--. 1 root root 1168 Apr 23 05:24 chrony.conf
-rw-r--r--. 1 root root  117 Feb 28  2020 dracut.conf
-rw-r--r--. 1 root root    9 Sep 10  2018 host.conf
-rw-r--r--. 1 root root 4849 Mar  8  2020 idmapd.conf
-rw-r--r--. 1 root root 7916 Apr 23 05:14 kdump.conf
-rw-r--r--. 1 root root  812 Feb 19  2020 krb5.conf
-rw-r--r--. 1 root root   28 Aug  1  2018 ld.so.conf
-rw-r-----. 1 root root  191 Nov  4  2019 libaudit.conf
-rw-r--r--. 1 root root 2391 Jul 23  2015 libuser.conf
-rw-r--r--. 1 root root   17 Sep 18 17:04 locale.conf
-rw-r--r--. 1 root root  438 Feb 19  2018 logrotate.conf
-rw-r--r--. 1 root root 5165 Nov  7  2018 man_db.conf
-rw-r--r--. 1 root root 1108 Jan 16  2020 mke2fs.conf
lrwxrwxrwx. 1 root root   29 Apr 23 05:18 nsswitch.conf -> /etc/authselect/nsswitch.conf
-rw-r--r--. 1 root root 4922 Dec  5  2018 oddjobd.conf
-rw-r--r--. 1 root root   86 Sep 18 17:04 resolv.conf
-rw-r--r--. 1 root root 3185 Dec 11  2019 rsyslog.conf
-rw-r--r--. 1 root root  216 Jan 17  2020 sestatus.conf
-rw-r-----. 1 root root 1786 Feb  5  2020 sudo.conf
-rw-r-----. 1 root root 3181 Feb  5  2020 sudo-ldap.conf


ls -l --author - List the contents with its owner

[ec2-user@ip-172-31-36-254 etc]$ ls -l --author
total 1052
-rw-r--r--.  1 root root   root     16 Apr 23 05:18 adjtime
-rw-r--r--.  1 root root   root   1529 Oct 30  2019 aliases
drwxr-xr-x.  2 root root   root    129 Apr 23 05:14 alternatives
-rw-r--r--.  1 root root   root    541 Jun 12  2019 anacrontab
drwxr-x---.  4 root root   root    100 Sep 18 17:03 audit
drwxr-xr-x.  3 root root   root    228 Apr 23 05:18 authselect
drwxr-xr-x.  2 root root   root     56 Apr 23 05:14 bash_completion.d

[ec2-user@ip-172-31-36-254 etc]$ ls -author
total 1.1M
-rw-r--r--.  1 root 1.6K Aug  1  2018 rpc
-rw-r--r--.  1 root  233 Sep 10  2018 printcap
-rw-r--r--.  1 root   58 Sep 10  2018 networks
-rw-r--r--.  1 root    0 Sep 10  2018 motd
-rw-r--r--.  1 root   66 Sep 10  2018 filesystems


Using '>' flag, copies result of ls command into a text file
[ec2-user@ip-172-31-36-254 etc]$ sudo ls -l *.conf > conf_contents.txt

-------------------------------------------------------------------------
Creating files and Directories --

Creating Files

touch command - Create a file without any contents - 0 bytes size

[ec2-user@ip-172-31-36-254 sample]$ touch sample1.txt
[ec2-user@ip-172-31-36-254 sample]$ ls -ltr
total 4
-rw-rw-r--. 1 ec2-user ec2-user 26 Sep 18 21:49 'Adv Parent Topics'
-rw-rw-r--. 1 ec2-user ec2-user  0 Sep 19 01:10  sample1.txt

cp - Copy an empty file to create a new file with 0 bytes size

[ec2-user@ip-172-31-36-254 sample]$ cp sample1.txt sample2.txt
[ec2-user@ip-172-31-36-254 sample]$ ls -ltr
total 4
-rw-rw-r--. 1 ec2-user ec2-user 26 Sep 18 21:49 'Adv Parent Topics'
-rw-rw-r--. 1 ec2-user ec2-user  0 Sep 19 01:10  sample1.txt
-rw-rw-r--. 1 ec2-user ec2-user  0 Sep 19 01:13  sample2.txt

Create a new file in Vi editor and save with :wq!

[ec2-user@ip-172-31-36-254 sample]$ vi sample3.txt
[ec2-user@ip-172-31-36-254 sample]$ ls -ltr
total 4
-rw-rw-r--. 1 ec2-user ec2-user 26 Sep 18 21:49 'Adv Parent Topics'
-rw-rw-r--. 1 ec2-user ec2-user  0 Sep 19 01:10  sample1.txt
-rw-rw-r--. 1 ec2-user ec2-user  0 Sep 19 01:13  sample2.txt
-rw-rw-r--. 1 ec2-user ec2-user  0 Sep 19 01:14  sample3.txt

Create a new file with cat command

[ec2-user@ip-172-31-36-254 sample]$ cat > sample4.txt
Hi My name is Shirish
Welcome to the Linux Tutorial
Press cntrl-d
[ec2-user@ip-172-31-36-254 sample]$ ls -ltr
total 8
-rw-rw-r--. 1 ec2-user ec2-user 26 Sep 18 21:49 'Adv Parent Topics'
-rw-rw-r--. 1 ec2-user ec2-user  0 Sep 19 01:10  sample1.txt
-rw-rw-r--. 1 ec2-user ec2-user  0 Sep 19 01:13  sample2.txt
-rw-rw-r--. 1 ec2-user ec2-user  0 Sep 19 01:14  sample3.txt
drwxrwxr-x. 2 ec2-user ec2-user  6 Sep 19 01:19  Doddy
-rw-rw-r--. 1 ec2-user ec2-user 52 Sep 19 01:26  sample4.txt

Adding text to Files (Redirects)

1) Vi
2) Redirect command output > or >>
3) echo > or >>

remove files 

[ec2-user@ip-172-31-36-254 sample]$ rm sample7.txt
[ec2-user@ip-172-31-36-254 sample]$ ls -ltr
total 32
-rw-rw-r--. 1 ec2-user ec2-user  26 Sep 18 21:49 'Adv Parent Topics'
---xr-xr-x. 1 ec2-user ec2-user   0 Sep 19 01:10  sample1.txt
--------w-. 1 ec2-user ec2-user   0 Sep 19 01:13  sample2.txt
dr--r--r-x. 2 ec2-user ec2-user   6 Sep 19 01:19  Doddy
-rw-rw-r--. 1 ec2-user ec2-user  80 Sep 19 01:34  sample4.txt
-rw-rw-r--. 1 ec2-user ec2-user  56 Sep 19 02:10  sample3.txt
-rw-rw-r--. 1 ec2-user ec2-user 233 Sep 19 17:19  demo_file
-rw-rw-r--. 1 ec2-user ec2-user 233 Sep 19 17:19  demo_file1
-rw-rw-r--. 1 ec2-user ec2-user 594 Sep 19 17:20  demo_text
-rw-rw-r--. 1 ec2-user ec2-user   0 Sep 19 18:20  new-test-file-name
-rw-rw-r--. 1 ec2-user ec2-user   0 Sep 19 18:20 'test-file-name '
drwxrwxr-x. 3 ec2-user ec2-user 152 Sep 19 18:46  find_utility
-rw-rw-r--. 1 ec2-user ec2-user  50 Sep 19 23:17  sample5.txt
-rw-rw-r--. 1 ec2-user ec2-user  50 Sep 20 05:50  sample6.txt
drwxrwxr-x. 5 ec2-user ec2-user  51 Sep 20 06:03  f2

rm -r - Remove directories and their contents recursively

[ec2-user@ip-172-31-36-254 sample]$ rm f2
rm: cannot remove 'f2': Is a directory

Important difference between rmdir and rm -r is that for rmdir directory should be empty but for rm -r 'empty' directory is NOT mandatory.

[ec2-user@ip-172-31-36-254 sample]$ rm -r f2

[ec2-user@ip-172-31-36-254 sample]$ ls -ltr
total 32
-rw-rw-r--. 1 ec2-user ec2-user  26 Sep 18 21:49 'Adv Parent Topics'
---xr-xr-x. 1 ec2-user ec2-user   0 Sep 19 01:10  sample1.txt
--------w-. 1 ec2-user ec2-user   0 Sep 19 01:13  sample2.txt
dr--r--r-x. 2 ec2-user ec2-user   6 Sep 19 01:19  Doddy
-rw-rw-r--. 1 ec2-user ec2-user  80 Sep 19 01:34  sample4.txt
-rw-rw-r--. 1 ec2-user ec2-user  56 Sep 19 02:10  sample3.txt
-rw-rw-r--. 1 ec2-user ec2-user 233 Sep 19 17:19  demo_file
-rw-rw-r--. 1 ec2-user ec2-user 233 Sep 19 17:19  demo_file1
-rw-rw-r--. 1 ec2-user ec2-user 594 Sep 19 17:20  demo_text
-rw-rw-r--. 1 ec2-user ec2-user   0 Sep 19 18:20  new-test-file-name
-rw-rw-r--. 1 ec2-user ec2-user   0 Sep 19 18:20 'test-file-name '
drwxrwxr-x. 3 ec2-user ec2-user 152 Sep 19 18:46  find_utility
-rw-rw-r--. 1 ec2-user ec2-user  50 Sep 19 23:17  sample5.txt
-rw-rw-r--. 1 ec2-user ec2-user  50 Sep 20 05:50  sample6.txt

When folder 1 has a file and folder2 has a file, rmdir -p is not useful. Use rm -r in such a case

[ec2-user@ip-172-31-36-254 sample]$ rmdir -p folder1/folder2/
rmdir: failed to remove 'folder1/folder2/': Directory not empty

Below works
[ec2-user@ip-172-31-36-254 sample]$ rm -r folder1

Very DANGEROUS command - rm -rf - Be careful!
-f, --force - ignore nonexistent files and arguments, never prompt. Remove all sub-directories and its contents FORCEFULLY without prompting

[ec2-user@ip-172-31-36-254 sample]$ rm -rf folder1


Safe option - rm -ri
-i - prompt before every removal

[ec2-user@ip-172-31-36-254 sample]$ rm -ri f2
rm: descend into directory 'f2'? y
rm: descend into directory 'f2/f3'? y
rm: remove regular empty file 'f2/f3/file1'? y
rm: remove regular empty file 'f2/f3/file'? y
rm: remove regular empty file 'f2/f3/2'? y
rm: remove directory 'f2/f3'? y
rm: remove regular empty file 'f2/file1'? y
rm: remove regular empty file 'f2/file'? y
rm: remove regular empty file 'f2/2'? y
rm: remove directory 'f2'? y



Creating Directories --

Create 2 directories Doddy and Soby

[ec2-user@ip-172-31-36-254 sample]$ mkdir Doddy Soby
[ec2-user@ip-172-31-36-254 sample]$ ls -ltr
total 4
-rw-rw-r--. 1 ec2-user ec2-user 26 Sep 18 21:49 'Adv Parent Topics'
-rw-rw-r--. 1 ec2-user ec2-user  0 Sep 19 01:10  sample1.txt
-rw-rw-r--. 1 ec2-user ec2-user  0 Sep 19 01:13  sample2.txt
-rw-rw-r--. 1 ec2-user ec2-user  0 Sep 19 01:14  sample3.txt
drwxrwxr-x. 2 ec2-user ec2-user  6 Sep 19 01:19  Soby
drwxrwxr-x. 2 ec2-user ec2-user  6 Sep 19 01:19  Doddy


mkdir -p - Creates a parent directory and a sub-directory

[ec2-user@ip-172-31-36-254 sample]$ mkdir -p folder1/folder2/folder3

[ec2-user@ip-172-31-36-254 sample]$ ls -ltr
drwxrwxr-x. 3 ec2-user ec2-user  21 Sep 20 06:00  folder1

[ec2-user@ip-172-31-36-254 sample]$ cd folder1
[ec2-user@ip-172-31-36-254 folder1]$ ls -ltr
total 0
drwxrwxr-x. 3 ec2-user ec2-user 21 Sep 20 06:00 folder2

[ec2-user@ip-172-31-36-254 folder1]$ cd folder2
[ec2-user@ip-172-31-36-254 folder2]$ ls -ltr
total 0
drwxrwxr-x. 2 ec2-user ec2-user 6 Sep 20 06:00 folder3


[ec2-user@ip-172-31-36-254 sample]$ mkdir -p f2/{folder4,folder5,folder6}

[ec2-user@ip-172-31-36-254 sample]$ cd f2
[ec2-user@ip-172-31-36-254 f2]$ ls -ltr
total 0
drwxrwxr-x. 2 ec2-user ec2-user 6 Sep 20 06:03 folder6
drwxrwxr-x. 2 ec2-user ec2-user 6 Sep 20 06:03 folder5
drwxrwxr-x. 2 ec2-user ec2-user 6 Sep 20 06:03 folder4


Removing Directories --

rmdir - Remove the specified directory (Empty)

[ec2-user@ip-172-31-36-254 sample]$ rmdir Soby/
[ec2-user@ip-172-31-36-254 sample]$ ls -ltr
total 4
-rw-rw-r--. 1 ec2-user ec2-user 26 Sep 18 21:49 'Adv Parent Topics'
-rw-rw-r--. 1 ec2-user ec2-user  0 Sep 19 01:10  sample1.txt
-rw-rw-r--. 1 ec2-user ec2-user  0 Sep 19 01:13  sample2.txt
-rw-rw-r--. 1 ec2-user ec2-user  0 Sep 19 01:14  sample3.txt
drwxrwxr-x. 2 ec2-user ec2-user  6 Sep 19 01:19  Doddy


[ec2-user@ip-172-31-36-254 sample]$ rmdir f2
rmdir: failed to remove 'f2': Directory not empty


rmdir -p - Remove DIRECTORY and its ancestors; e.g., 'rmdir -p a/b/c' is similar to 'rmdir a/b/c a/b a'
v- verbose

[ec2-user@ip-172-31-36-254 sample]$ rmdir -pv folder1/folder2/folder3
rmdir: removing directory, 'folder1/folder2/folder3'
rmdir: removing directory, 'folder1/folder2'
rmdir: removing directory, 'folder1'


When folder 1 has a file and folder2 has a file, rmdir -p is not useful. Use rm -r in such a case

[ec2-user@ip-172-31-36-254 sample]$ rmdir -p folder1/folder2/
rmdir: failed to remove 'folder1/folder2/': Directory not empty

Below works
[ec2-user@ip-172-31-36-254 sample]$ rm -r folder1

-------------------------------------------------------------------------
Working with Files --

cat - This command is used to display the content of text files and concatenate several files into one

[ec2-user@ip-172-31-36-254 sample]$ cat sample4.txt
Hi My name is Shirish
<blank-line>
Welcome to the Linux Tutorial

cat -b -- Add line numbers to non-blank lines
cat -n -- Add line numbers to all lines

[ec2-user@ip-172-31-36-254 sample]$ cat -b sample4.txt
     1  Hi My name is Shirish
		<blank-line>
     2  Welcome to the Linux Tutorial
	 
[ec2-user@ip-172-31-36-254 sample]$ cat -n sample4.txt
     1  Hi My name is Shirish
     2  <blank-line>
     3  Welcome to the Linux Tutorial

'>>' flag is used to append contents to an existing file.

[ec2-user@ip-172-31-36-254 sample]$ cat >> sample4.txt
Hello appending a new line
[ec2-user@ip-172-31-36-254 sample]$ cat sample4.txt
Hi My name is Shirish
<blank-line>
Welcome to the Linux Tutorial
Hello appending a new line

cat -s - Used to squeeze blank lines into one line
cat -E - Show $ at the end of line


cp - Copy files and directories
By default cp copies files. To copy a directory use cp -R flag
cp -R - Recursive copy for copying directories; copies even hidden files
cp -r - works the same way as cp -R

[ec2-user@ip-172-31-36-254 sample]$ cp Doddy /home/ec2-user/
cp: -r not specified; omitting directory 'Doddy'

[ec2-user@ip-172-31-36-254 sample]$ cp -R Doddy /home/ec2-user/
[ec2-user@ip-172-31-36-254 sample]$ cd
[ec2-user@ip-172-31-36-254 ~]$ ls -ltr
total 0
drwxrwxr-x. 4 ec2-user ec2-user 260 Sep 19 23:17 sample
dr--r--r-x. 2 ec2-user ec2-user   6 Sep 20 05:27 Doddy


cp -v - Verbose; 

[ec2-user@ip-172-31-36-254 sample]$ cp -v sample5.txt sample6.txt
'sample5.txt' -> 'sample6.txt'

cp -i - Interactive mode; asks before overwriting

[ec2-user@ip-172-31-36-254 sample]$ cp -i sample5.txt sample6.txt
cp: overwrite 'sample6.txt'?

cp -n - Do not overwrite an existing file (note timestamps in example below. File is not overwritten with 'n' flag)

[ec2-user@ip-172-31-36-254 sample]$ ls -ltr
-rw-rw-r--. 1 ec2-user ec2-user  50 Sep 19 23:17  sample5.txt
-rw-rw-r--. 1 ec2-user ec2-user  50 Sep 20 05:33  sample6.txt

[ec2-user@ip-172-31-36-254 sample]$ cp -n sample5.txt sample6.txt

[ec2-user@ip-172-31-36-254 sample]$ ls -ltr
-rw-rw-r--. 1 ec2-user ec2-user  50 Sep 19 23:17  sample5.txt
-rw-rw-r--. 1 ec2-user ec2-user  50 Sep 20 05:33  sample6.txt


cp -u - copy only when the SOURCE file is newer than the destination file or when the destination file is missing
(note timestamps, file is not updated)

[ec2-user@ip-172-31-36-254 sample]$ ls -ltr
-rw-rw-r--. 1 ec2-user ec2-user  50 Sep 19 23:17  sample5.txt
-rw-rw-r--. 1 ec2-user ec2-user  50 Sep 20 05:33  sample6.txt

[ec2-user@ip-172-31-36-254 sample]$ cp -u sample5.txt sample6.txt

[ec2-user@ip-172-31-36-254 sample]$ ls -ltr
-rw-rw-r--. 1 ec2-user ec2-user  50 Sep 19 23:17  sample5.txt
-rw-rw-r--. 1 ec2-user ec2-user  50 Sep 20 05:33  sample6.txt

File is updated in example below since sample7.txt is newer than sample6.txt

[ec2-user@ip-172-31-36-254 sample]$ ls -ltr
-rw-rw-r--. 1 ec2-user ec2-user  50 Sep 20 05:33  sample6.txt
-rw-rw-r--. 1 ec2-user ec2-user  50 Sep 20 05:40  sample7.txt

[ec2-user@ip-172-31-36-254 sample]$ cp -u sample7.txt sample6.txt

[ec2-user@ip-172-31-36-254 sample]$ ls -ltr
-rw-rw-r--. 1 ec2-user ec2-user  50 Sep 20 05:40  sample7.txt
-rw-rw-r--. 1 ec2-user ec2-user  50 Sep 20 05:50  sample6.txt


mv - Used to cut-paste a file/dir or rename a file/dir

mv -i - Interactive mode; asks before overwriting files
mv -u -  Move only when the SOURCE file is newer than the destination file or when the destination file is missing
mv -v - verbose

-------------------------------------------------------------------------
File Permissions --

There are 4 types of entities - u-user, g-group, o-others, a-all
There are 3 types of permissions - r-read, w-write, x-execute 

File Types -

Normal file - Indicated by '-'
Directory - Indicated by 'd'
Character Special file - Indicated by 'c'
Binary Special file - Indicated by 'b' 
link - Indicated by 'l'

chmod - Change file permissions

chmod commands - Symbolic representation of file permissions  

[ec2-user@ip-172-31-36-254 sample]$ ls -ltr sample1.txt
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 01:10 sample1.txt

[ec2-user@ip-172-31-36-254 sample]$ chmod g=x sample1.txt

[ec2-user@ip-172-31-36-254 sample]$ ls -ltr sample1.txt
-rw---xr--. 1 ec2-user ec2-user 0 Sep 19 01:10 sample1.txt

[ec2-user@ip-172-31-36-254 sample]$ chmod u+x sample1.txt

[ec2-user@ip-172-31-36-254 sample]$ ls -ltr sample1.txt
-rwx--xr--. 1 ec2-user ec2-user 0 Sep 19 01:10 sample1.txt

[ec2-user@ip-172-31-36-254 sample]$ chmod o-r sample1.txt

[ec2-user@ip-172-31-36-254 sample]$ ls -ltr sample1.txt
-rwx--x---. 1 ec2-user ec2-user 0 Sep 19 01:10 sample1.txt

[ec2-user@ip-172-31-36-254 sample]$ chmod a+w sample1.txt

[ec2-user@ip-172-31-36-254 sample]$ ls -ltr sample1.txt
-rwx-wx-w-. 1 ec2-user ec2-user 0 Sep 19 01:10 sample1.txt

[ec2-user@ip-172-31-36-254 sample]$ chmod u-x,g+r,o+x sample1.txt

[ec2-user@ip-172-31-36-254 sample]$ ls -ltr sample1.txt
-rw-rwx-wx. 1 ec2-user ec2-user 0 Sep 19 01:10 sample1.txt

[ec2-user@ip-172-31-36-254 sample]$ chmod g-rw sample1.txt

[ec2-user@ip-172-31-36-254 sample]$ ls -ltr sample1.txt
-rw---x-wx. 1 ec2-user ec2-user 0 Sep 19 01:10 sample1.txt


chmod commands - Octal representation of file permissions  

Nothing - 0 
r - 4
w - 2
x - 1

[ec2-user@ip-172-31-36-254 sample]$ chmod 755 sample1.txt

[ec2-user@ip-172-31-36-254 sample]$ ls -ltr sample1.txt
-rwxr-xr-x. 1 ec2-user ec2-user 0 Sep 19 01:10 sample1.txt

Directory Permissions --

Read permission for directory indicates you can 'ls' to that directory. You can Read contents of that directory
Write permission for directory indicates you can create files/directories inside that directory.
Execute permission for directory indicates you can 'cd' to that directory.

If you have only execute permission to a directory, then you can cd to directory, but ls will fail and you can not write to directory.
If you have only read permission to a directory, then you can ls to the directory, but cd will fail and you can not write to directory.

-------------------------------------------------------------------------
File Ownership commands --

chown - To change the owner of files/directories

chown <new_username> <filename>
chown <new_username>:<new_groupname> <filename>


chgrp - To change the group ownership of files/directories

chgrp <new_groupname> <filename>

Recursive ownership change option (Cascade) for chown and chgrp with -R flag. 
Change ownership recursively for current directly and all sub-directories.


-------------------------------------------------------------------------
Pipes --

A pipe is used by the shell to connect the output of one command directly to the input of another command.

more, less, head, tail -- 

more - Gives output one page at a time
Enter - Browse line by line
space - Browse page by page
Backwards scrolling can be achieved by pressing 'b'. 
You can also search stuff by pressing '/' and entering the search keyword (just like you do in man pages).
q - Quit

[ec2-user@ip-172-31-36-254 etc]$ ls -ltr | more
total 1052
-rw-r--r--.  1 root root     2391 Jul 23  2015 libuser.conf
-rw-r--r--.  1 root root      642 Dec  9  2016 xattr.conf
-rw-r--r--.  1 root root      438 Feb 19  2018 logrotate.conf
-rw-r--r--.  1 root root     1634 Aug  1  2018 rpc

-number - Allows you to set the number of line a page should contain

[ec2-user@ip-172-31-36-254 /]$ ls -ltr | more -5
total 16
drwxr-xr-x.  2 root root    6 Aug 12  2018 srv
lrwxrwxrwx.  1 root root    8 Aug 12  2018 sbin -> usr/sbin
drwxr-xr-x.  2 root root    6 Aug 12  2018 opt
drwxr-xr-x.  2 root root    6 Aug 12  2018 mnt
--More--

You can display a page starting from a specific line number using the +number option

[ec2-user@ip-172-31-36-254 /]$ ls -ltr | more +4
drwxr-xr-x.  2 root root    6 Aug 12  2018 opt
drwxr-xr-x.  2 root root    6 Aug 12  2018 mnt
drwxr-xr-x.  2 root root    6 Aug 12  2018 media
lrwxrwxrwx.  1 root root    9 Aug 12  2018 lib64 -> usr/lib64
lrwxrwxrwx.  1 root root    7 Aug 12  2018 lib -> usr/lib
lrwxrwxrwx.  1 root root    7 Aug 12  2018 bin -> usr/bin
drwxr-xr-x. 12 root root  144 Apr 23 05:13 usr
drwxr-xr-x.  2 root root    6 Apr 23 05:19 data
dr-xr-xr-x. 94 root root    0 Sep 18 17:03 proc
dr-xr-xr-x. 13 root root    0 Sep 18 17:03 sys
drwxr-xr-x. 20 root root  278 Sep 18 17:03 var
drwxr-xr-x. 18 root root 2720 Sep 18 17:04 dev
drwxr-xr-x. 23 root root  660 Sep 18 17:05 run
dr-xr-xr-x.  5 root root 4096 Sep 18 17:05 boot
dr-xr-x---.  3 root root  170 Sep 18 17:59 root
drwxr-xr-x.  5 root root   53 Sep 18 22:04 home
drwxr-xr-x. 84 root root 8192 Sep 18 22:05 etc
drwxrwxrwt.  8 root root  172 Sep 21 11:55 tmp


less - less is moreover same as more. The main difference between more and less is that less command is faster because it does not load the entire file at once.

Allows navigation though file using page up/down keys.
Enter - Browse line by line
space - Browse page by page
Backwards scrolling can be achieved by pressing 'b'. 
You can also search stuff by pressing '/' and entering the search keyword (just like you do in man pages).
q - Quit

To display a file staring at a specific line number use the following syntax:
# less +5 /var/log/auth.log

If you need to track down the number of every line with less command use the -N option.

[ec2-user@ip-172-31-36-254 /]$ sudo less -N /var/log/messages
      1 Sep 20 03:07:01 ip-172-31-36-254 rsyslogd[1073]: [origin software="rsyslogd" swVersion="8.1911.0-3.el8" x-pid="1073" x-info="https://www.rsyslog.com"] rsyslogd was       1 HUPed
      2 Sep 20 03:07:02 ip-172-31-36-254 rhsmd[9403]: In order for Subscription Manager to provide your system with updates, your system must be registered with the Custome      2 r Portal. Please enter your Red Hat login to ensure your system is up-to-date.
      3 Sep 20 03:34:57 ip-172-31-36-254 NetworkManager[1285]: <info>  [1600572897.9330] dhcp4 (eth0): option dhcp_lease_time      => '3600'
      4 Sep 20 03:34:57 ip-172-31-36-254 NetworkManager[1285]: <info>  [1600572897.9332] dhcp4 (eth0): option domain_name          => 'us-east-2.compute.internal'

head - Give first 2 lines of the output

[ec2-user@ip-172-31-36-254 /]$ ls -ltr | head -2
total 16
drwxr-xr-x.  2 root root    6 Aug 12  2018 srv


head -n -NUM - with the leading '-', print all but the last NUM lines of each file

[ec2-user@ip-172-31-36-254 sample]$ cat  demo_file
THIS LINE IS THE 1ST UPPER CASE LINE IN THIS FILE.
this line is the 1st lower case line in this file.
This Line Has All Its First Character Of The Word With Upper Case.

Two lines above this line is empty.
And this is the last line.

skip last 3 lines
[ec2-user@ip-172-31-36-254 sample]$ head -n -3 demo_file
THIS LINE IS THE 1ST UPPER CASE LINE IN THIS FILE.
this line is the 1st lower case line in this file.
This Line Has All Its First Character Of The Word With Upper Case.


tail - Give last 2 lines of the output

[ec2-user@ip-172-31-36-254 etc]$ ls -ltr | tail -2
-rw-r--r--.  1 root root       65 Sep 18 22:04 subgid
----------.  1 root root      981 Sep 18 22:05 shadow

tail -f - output appended data as the file grows. Very useful option to see live streaming of logs

[ec2-user@ip-172-31-36-254 /]$ sudo tail -f /var/log/messages
Sep 21 15:04:57 ip-172-31-36-254 NetworkManager[1285]: <info>  [1600700697.9447] dhcp4 (eth0): option requested_subnet_mask => '1'
Sep 21 15:04:57 ip-172-31-36-254 NetworkManager[1285]: <info>  [1600700697.9447] dhcp4 (eth0): option requested_time_offset => '1'
Sep 21 15:04:57 ip-172-31-36-254 NetworkManager[1285]: <info>  [1600700697.9447] dhcp4 (eth0): option requested_wpad       => '1'

Skip first few lines in output

$ tail -n +NUM -  to output starting with line NUM

[ec2-user@ip-172-31-36-254 sample]$ cat  demo_file
THIS LINE IS THE 1ST UPPER CASE LINE IN THIS FILE.
this line is the 1st lower case line in this file.
This Line Has All Its First Character Of The Word With Upper Case.

Two lines above this line is empty.
And this is the last line.

output starting with line 2. Skip line 1

[ec2-user@ip-172-31-36-254 sample]$ tail -n +2 demo_file
this line is the 1st lower case line in this file.
This Line Has All Its First Character Of The Word With Upper Case.

Two lines above this line is empty.
And this is the last line.


grep 'me' in sample3.txt and sample4.txt

[ec2-user@ip-172-31-36-254 sample]$ grep me sample3.txt sample4.txt
sample3.txt:My name is meeka
sample3.txt:mera desh bharat hain
sample4.txt:Hi My name is Shirish
sample4.txt:Welcome to the Linux Tutorial

grep 'me' in sample3.txt and sample4.txt and sort in ascending order

[ec2-user@ip-172-31-36-254 sample]$ grep me sample3.txt sample4.txt | sort
sample3.txt:mera desh bharat hain
sample3.txt:My name is meeka
sample4.txt:Hi My name is Shirish
sample4.txt:Welcome to the Linux Tutorial

grep 'me' in sample3.txt and sample4.txt and sort in reverse order

[ec2-user@ip-172-31-36-254 sample]$ grep me sample3.txt sample4.txt | sort -r
sample4.txt:Welcome to the Linux Tutorial
sample4.txt:Hi My name is Shirish
sample3.txt:My name is meeka
sample3.txt:mera desh bharat hain

-------------------------------------------------------------------------
Filters/ Text Processors Commands --


grep -- To search for a particular word in a text file 

By default, it is a case-sensitive search
With -i flag, it is a case-insensitive search

[ec2-user@ip-172-31-36-254 sample]$ grep me sample3.txt
My name is meeka
mera desh bharat hain

[ec2-user@ip-172-31-36-254 sample]$ grep -i me sample3.txt
My name is meeka
mera desh bharat hain
Mera dil bechara

grep -n - returns matching strings along with their line numbers

[ec2-user@ip-172-31-36-254 sample]$ grep -n Me sample3.txt
3:Mera dil bechara

[ec2-user@ip-172-31-36-254 sample]$ grep -in Me sample3.txt
1:My name is meeka
2:mera desh bharat hain
3:Mera dil bechara

grep -v - returns the result of lines not matching the search string

[ec2-user@ip-172-31-36-254 sample]$ grep -v Me sample3.txt
My name is meeka
mera desh bharat hain

[ec2-user@ip-172-31-36-254 sample]$ grep -vn Me sample3.txt
1:My name is meeka
2:mera desh bharat hain

[ec2-user@ip-172-31-36-254 sample]$ grep -vn me sample3.txt
3:Mera dil bechara

grep -c - returns the number of lines in which the results matched search string

[ec2-user@ip-172-31-36-254 sample]$ grep -c me sample3.txt
2

[ec2-user@ip-172-31-36-254 sample]$ grep -ic me sample3.txt
3

grep use regular expression (regex) as below - 

Match all lines that start with ‘hello’. E.g: “hello there”
$ grep “^hello” file1

Match all lines that end with ‘done’. E.g: “well done”
$ grep “done$” file1

Match all lines that contain any of the letters ‘a’, ‘b’, ‘c’, ‘d’ or ‘e’.
$ grep “[a-e]” file1

Match all lines that do not contain a vowel
$ grep “[^aeiou]” file1

$ grep "this" demo_*

demo_file:this line is the 1st lower case line in this file.
demo_file:Two lines above this line is empty.
demo_file:And this is the last line.
demo_file1:this line is the 1st lower case line in this file.
demo_file1:Two lines above this line is empty.
demo_file1:And this is the last line.


Checking for full words, not for sub-strings using grep -w

$ grep -iw "is" demo_file

THIS LINE IS THE 1ST UPPER CASE LINE IN THIS FILE.
this line is the 1st lower case line in this file.
Two lines above this line is empty.
And this is the last line.


The following example prints the matched line, along with the 3 lines after it.

$ grep -A 3 -i "example" demo_text
Example to show the difference between WORD and word

* 192.168.1.1 - single WORD
* 192.168.1.1 - seven words.


The following example prints the matched line, along with the 2 lines before it.

$ grep -B 2 "single WORD" demo_text
Example to show the difference between WORD and word

* 192.168.1.1 - single WORD

grep -r - Recursive
The following example will look for the string “ramesh” in all the files in the current directory and all it’s subdirectory.

$ grep -r "ramesh" *

grep -l - Show the file-name, not the result itself.
If you want the grep to show out only the file names which matched the given pattern, use the -l option.

$ grep -l this demo_*
demo_file
demo_file1

*If you want the grep to show out only the matched string of the pattern then use the -o option.
It might not be that much useful when you give the string straight forward. But it becomes very useful when you give a regex pattern and trying to see what it matches.

$ grep -o "is.*line" demo_file
is line is the 1st lower case line
is line
is is the last line

*When you want grep to show the position where it matches the pattern in the file, use the following options as

$ cat temp-file.txt
12345
12345

$ grep -o -b "3" temp-file.txt
2:3
8:3


Display the lines which does not matches all the given pattern.

Syntax: grep -v -e "pattern" -e "pattern"

$ cat test-file.txt
a
b
c
d

$ grep -v -e "a" -e "b" -e "c" test-file.txt
d


cut - Remove sections from each line of files

Only first character from each line

[ec2-user@ip-172-31-36-254 sample]$ cut -c1 demo_file
T
t
T

T
A

Only second character from each line

[ec2-user@ip-172-31-36-254 sample]$ cut -c2 demo_file
H
h
h

w
n

Only first and second characters from each line
[ec2-user@ip-172-31-36-254 sample]$ cut -c1-2 demo_file
TH
th
Th

Tw
An

[ec2-user@ip-172-31-36-254 sample]$ cut -c1 demo_file demo_file1
T
t
T

T
A
T
t
T

T
A


Awk  - AWK is a programming language which allows easy manipulation of structured data and the generation of formatted reports. Awk stands for the names of its authors “Aho, Weinberger, and Kernighan”

The Awk is mostly used for pattern scanning and processing. It searches one or more files to see if they contain lines that matches with the specified patterns and then perform associated actions.

Awk reads from a file or from its standard input, and outputs to its standard output. Awk does not get along with non-text files.

AWK examples

AWK - By default Awk prints every line from the file.

[ec2-user@ip-172-31-36-254 sample]$ awk '{print;}' employee.txt
100  Thomas  Manager    Sales       $5,000
200  Jason   Developer  Technology  $5,500
300  Sanjay  Sysadmin   Technology  $7,000
400  Nisha   Manager    Marketing   $9,500
500  Randy   DBA        Technology  $6,000

AWK - Print the lines which matches with the pattern

[ec2-user@ip-172-31-36-254 sample]$ awk '/Thomas/' employee.txt
100  Thomas  Manager    Sales       $5,000

[ec2-user@ip-172-31-36-254 sample]$ awk '/Thomas/
> /Nisha/' employee.txt
100  Thomas  Manager    Sales       $5,000
400  Nisha   Manager    Marketing   $9,500

AWK - Print only specific field.

[ec2-user@ip-172-31-36-254 sample]$ awk '{print $1;}' employee.txt
100
200
300
400
500

[ec2-user@ip-172-31-36-254 sample]$ awk '{print $2,$5;}' employee.txt
Thomas $5,000
Jason $5,500
Sanjay $7,000
Nisha $9,500
Randy $6,000

[ec2-user@ip-172-31-36-254 sample]$ cat employee.txt | awk {'print $2'}
Thomas
Jason
Sanjay
Nisha
Randy


NF is a built in variable which represents total number of fields in a record.
Here NF = 5 for employee.txt

[ec2-user@ip-172-31-36-254 sample]$ awk '{print $2,$NF;}' employee.txt
Thomas $5,000
Jason $5,500
Sanjay $7,000
Nisha $9,500
Randy $6,000


AWK - Find the employees who has employee id greater than 200

[ec2-user@ip-172-31-36-254 sample]$ awk '$1 >200' employee.txt
300  Sanjay  Sysadmin   Technology  $7,000
400  Nisha   Manager    Marketing   $9,500
500  Randy   DBA        Technology  $6,000


AWK - Print the list of employees in Technology department

[ec2-user@ip-172-31-36-254 sample]$ awk '$4 ~/Technology/' employee.txt
200  Jason   Developer  Technology  $5,500
300  Sanjay  Sysadmin   Technology  $7,000
500  Randy   DBA        Technology  $6,000


uniq - report or omit repeated lines - Works like distinct in SQL

[ec2-user@ip-172-31-36-254 sample]$ cat seinfeld-characters | awk {'print $2'}
Seinfeld
Kramer
Benes
Costanza
mailman
Costanza
Costanza
Seinfeld
Seinfeld
Kramer
Benes
Leo
Puddy
Pitt
Bania

In order to use uniq, lines must be sorted first 

Without sort

[ec2-user@ip-172-31-36-254 sample]$ cat seinfeld-characters | awk {'print $2'} | uniq
Seinfeld
Kramer
Benes
Costanza
mailman
Costanza
Seinfeld
Kramer
Benes
Leo
Puddy
Pitt
Bania

With sort

[ec2-user@ip-172-31-36-254 sample]$ cat seinfeld-characters | awk {'print $2'} | sort
Bania
Benes
Benes
Costanza
Costanza
Costanza
Kramer
Kramer
Leo
mailman
Pitt
Puddy
Seinfeld
Seinfeld
Seinfeld

Lists distinct entries

[ec2-user@ip-172-31-36-254 sample]$ cat seinfeld-characters | awk {'print $2'} | sort | uniq
Bania
Benes
Costanza
Kramer
Leo
mailman
Pitt
Puddy
Seinfeld

-d - Lists only duplicate entries. Must be sorted to get accurate results

[ec2-user@ip-172-31-36-254 sample]$ cat seinfeld-characters | awk {'print $2'} | sort | uniq -d
Benes
Costanza
Kramer
Seinfeld


-u - Lists only unique entries. Must be sorted to get accurate results

[ec2-user@ip-172-31-36-254 sample]$ cat seinfeld-characters | awk {'print $2'} | sort | uniq -u
Bania
Leo
mailman
Pitt
Puddy

wc -  print newline, word, and byte counts for each file

[ec2-user@ip-172-31-36-254 sample]$ wc seinfeld-characters
 15  30 205 seinfeld-characters

15 - # of lines
30 - # of words
205 - # of bytes (file size in bytes)
followed by file name

Flags -

l - lines
w - words
c - bytes
m - characters

[ec2-user@ip-172-31-36-254 sample]$ wc -l seinfeld-characters
15 seinfeld-characters
[ec2-user@ip-172-31-36-254 sample]$ wc -w seinfeld-characters
30 seinfeld-characters
[ec2-user@ip-172-31-36-254 sample]$ wc -m seinfeld-characters
205 seinfeld-characters
[ec2-user@ip-172-31-36-254 sample]$ wc -c seinfeld-characters
205 seinfeld-characters

[ec2-user@ip-172-31-36-254 sample]$ cat seinfeld-characters | wc -l
15


-------------------------------------------------------------------------
find - Search for files in a directory hierarchy
find utility not only finds files but also directories unless specified

**Find Files Using Name --
This is a basic usage of the find command. This example finds all files with name — MyCProgram.c in the current directory and all its sub-directories.
Note that it is case-sensitive

[ec2-user@ip-172-31-36-254 find_utility]$ find -name MyCProgram.c
./MyCProgram.c
./backup/MyCProgram.c

[ec2-user@ip-172-31-36-254 find_utility]$ find -name mycprogram.c
./mycprogram.c
./backup/mycprogram.c

**Find Files Using Name and Ignoring Case

[ec2-user@ip-172-31-36-254 find_utility]$ find -iname mycprogram.c
./mycprogram.c
./MyCProgram.c
./backup/mycprogram.c
./backup/MyCProgram.c

**Limit Search To Specific Directory Level Using mindepth and maxdepth

Find the passwd file under all sub-directories starting from root directory.
Using sudo to avoid permission denied messages in output

[ec2-user@ip-172-31-36-254 find_utility]$ sudo find / -name passwd
/sys/fs/selinux/class/passwd
/sys/fs/selinux/class/passwd/perms/passwd
/etc/pam.d/passwd
/etc/passwd
/var/lib/sss/mc/passwd
/usr/bin/passwd
/usr/share/licenses/passwd
/usr/share/doc/passwd

Find the passwd file under root and one level down. (i.e root — level 1, and one sub-directory — level 2)

[ec2-user@ip-172-31-36-254 find_utility]$ sudo find / -maxdepth 2 -name passwd
/etc/passwd

Find the passwd file under root and two levels down. (i.e root — level 1, and two sub-directories — level 2 and 3 )

[ec2-user@ip-172-31-36-254 find_utility]$ sudo find / -maxdepth 3 -name passwd
/etc/pam.d/passwd
/etc/passwd
/usr/bin/passwd

Find the passwd file between 2 levels

[ec2-user@ip-172-31-36-254 find_utility]$ sudo find / -mindepth 3 -maxdepth 5 -name passwd
/sys/fs/selinux/class/passwd
/etc/pam.d/passwd
/var/lib/sss/mc/passwd
/usr/bin/passwd
/usr/share/licenses/passwd
/usr/share/doc/passwd


Executing Commands on the Files Found by the Find Command.
The find command calculates the md5sum of all the files with the name MyCProgram.c (ignoring case). {} is replaced by the current file name.

[ec2-user@ip-172-31-36-254 find_utility]$ find -iname "MyCProgram.c" -exec md5sum {} \;
d41d8cd98f00b204e9800998ecf8427e  ./mycprogram.c
d41d8cd98f00b204e9800998ecf8427e  ./MyCProgram.c
d41d8cd98f00b204e9800998ecf8427e  ./backup/mycprogram.c
d41d8cd98f00b204e9800998ecf8427e  ./backup/MyCProgram.c

'find .' is same as 'find'

[ec2-user@ip-172-31-36-254 find_utility]$ find . -iname "MyCProgram.c" -exec md5sum {} \;
d41d8cd98f00b204e9800998ecf8427e  ./mycprogram.c
d41d8cd98f00b204e9800998ecf8427e  ./MyCProgram.c
d41d8cd98f00b204e9800998ecf8427e  ./backup/mycprogram.c
d41d8cd98f00b204e9800998ecf8427e  ./backup/MyCProgram.c

[ec2-user@ip-172-31-36-254 find_utility]$ find .. -iname "MyCProgram.c" -exec md5sum {} \;
d41d8cd98f00b204e9800998ecf8427e  ../find_utility/mycprogram.c
d41d8cd98f00b204e9800998ecf8427e  ../find_utility/MyCProgram.c
d41d8cd98f00b204e9800998ecf8427e  ../find_utility/backup/mycprogram.c
d41d8cd98f00b204e9800998ecf8427e  ../find_utility/backup/MyCProgram.c


Inverting the match.
Shows the files or directories whose name are not MyCProgram.c
Below examples show that find utility not only finds files but also directories unless specified

[ec2-user@ip-172-31-36-254 find_utility]$ find -maxdepth 1 -not -iname "MyCProgram.c"
.
./create_sample_files.sh
./MybashProgram.sh
./Program.c
./backup

Removing 'i' flag

[ec2-user@ip-172-31-36-254 find_utility]$ find -maxdepth 1 -not -name "MyCProgram.c"
.
./create_sample_files.sh
./MybashProgram.sh
./mycprogram.c
./Program.c
./backup

**Finding Files by its inode Number.

[ec2-user@ip-172-31-36-254 sample]$ ls -1 test*
test-file-name
'test-file-name ' [Note: There is a space at the end]

view the inode number of the file

[ec2-user@ip-172-31-36-254 sample]$ ls -i1 test*
13102188 test-file-name
13102189 'test-file-name '


find command renames a file using the inode number.

[ec2-user@ip-172-31-36-254 sample]$ find -inum 13102188 -exec mv {} new-test-file-name \;

[ec2-user@ip-172-31-36-254 sample]$ ls -ltr
total 24
-rw-rw-r--. 1 ec2-user ec2-user  26 Sep 18 21:49 'Adv Parent Topics'
-rw-rw-r--. 1 ec2-user ec2-user   0 Sep 19 01:10  sample1.txt
-rw-rw-r--. 1 ec2-user ec2-user   0 Sep 19 01:13  sample2.txt
drwxrwxr-x. 2 ec2-user ec2-user   6 Sep 19 01:19  Doddy
-rw-rw-r--. 1 ec2-user ec2-user  80 Sep 19 01:34  sample4.txt
-rw-rw-r--. 1 ec2-user ec2-user  56 Sep 19 02:10  sample3.txt
-rw-rw-r--. 1 ec2-user ec2-user 233 Sep 19 17:19  demo_file
-rw-rw-r--. 1 ec2-user ec2-user 233 Sep 19 17:19  demo_file1
-rw-rw-r--. 1 ec2-user ec2-user 594 Sep 19 17:20  demo_text
drwxrwxr-x. 3 ec2-user ec2-user 131 Sep 19 17:36  find_utility
-rw-rw-r--. 1 ec2-user ec2-user   0 Sep 19 18:20  new-test-file-name
-rw-rw-r--. 1 ec2-user ec2-user   0 Sep 19 18:20 'test-file-name '

inode number remains the same even after rename 

[ec2-user@ip-172-31-36-254 sample]$ ls -i1 *test*
13102188 new-test-file-name
13102189 'test-file-name '

You can use this technique when you want to do some operation with the files which are named poorly as shown in the example below. For example, the file with name — file?.txt has a special character in it. If you try to execute “rm file?.txt”, all the following three files will get removed. So, follow the steps below to delete only the “file?.txt” file.

# ls
file1.txt  file2.txt  file?.txt

Find the inode numbers of each file.

# ls -i1
804178 file1.txt
804179 file2.txt
804180 file?.txt

Use the inode number to remove the file that had special character in it as shown below.

# find -inum 804180 -exec rm {} \;

# ls
file1.txt  file2.txt
[Note: The file with name "file?.txt" is now removed]

type option - find by type
using sudo to avoid permission denied messages

[ec2-user@ip-172-31-36-254 etc]$ sudo find . -name 'loca*'
./crypto-policies/local.d
./localtime
./polkit-1/localauthority
./polkit-1/localauthority.conf.d
./locale.conf

type f - Display only files - Avoid directories and links

[ec2-user@ip-172-31-36-254 etc]$ sudo find . -type f -name 'loca*'
./locale.conf

type l - Display only links

[ec2-user@ip-172-31-36-254 etc]$ sudo find . -type l -name 'loca*'
./localtime

type d - Display only directories

[ec2-user@ip-172-31-36-254 etc]$ sudo find . -type d -name 'loca*'
./crypto-policies/local.d
./polkit-1/localauthority
./polkit-1/localauthority.conf.d


perm option - find by File permissions

-perm mode - File's  permission bits are exactly mode (octal or symbolic). 
-perm -mode - All of the permission bits mode are set for the file.  
-perm /mode - Any  of the permission bits mode are set for the file.  

Find files which has read permission to group

[ec2-user@ip-172-31-36-254 polkit-1]$ sudo find . -perm -g=r -type f -exec ls -l {} \;
-rw-r--r--. 1 root root 326 Sep  4  2017 ./rules.d/50-default.rules
-rw-r--r--. 1 root root 974 Aug 12  2018 ./rules.d/49-polkit-pkla-compat.rules


Find files which has read permission ONLY to group

[ec2-user@ip-172-31-36-254 find_utility]$ chmod 040 perm_file.txt

[ec2-user@ip-172-31-36-254 find_utility]$ ls -ltr
total 4
-rwxrwxr-x. 1 ec2-user ec2-user 179 Sep 19 17:33 create_sample_files.sh
-rw-rw-r--. 1 ec2-user ec2-user   0 Sep 19 17:36 MybashProgram.sh
-rw-rw-r--. 1 ec2-user ec2-user   0 Sep 19 17:36 mycprogram.c
-rw-rw-r--. 1 ec2-user ec2-user   0 Sep 19 17:36 MyCProgram.c
-rw-rw-r--. 1 ec2-user ec2-user   0 Sep 19 17:36 Program.c
drwxrwxr-x. 2 ec2-user ec2-user  87 Sep 19 17:36 backup
----r-----. 1 ec2-user ec2-user   0 Sep 19 18:46 perm_file.txt

[ec2-user@ip-172-31-36-254 find_utility]$ find . -perm g=r -type f -exec ls -l {} \;
----r-----. 1 ec2-user ec2-user 0 Sep 19 18:46 ./perm_file.txt


[ec2-user@ip-172-31-36-254 find_utility]$ find . -perm 040 -type f -exec ls -l {} \;
----r-----. 1 ec2-user ec2-user 0 Sep 19 18:46 ./perm_file.txt

[ec2-user@ip-172-31-36-254 find_utility]$ find . -perm -040 -type f -exec ls -l {} \;
-rwxrwxr-x. 1 ec2-user ec2-user 179 Sep 19 17:33 ./create_sample_files.sh
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./MybashProgram.sh
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./mycprogram.c
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./MyCProgram.c
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./Program.c
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./backup/MybashProgram.sh
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./backup/mycprogram.c
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./backup/MyCProgram.c
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./backup/Program.c
----r-----. 1 ec2-user ec2-user 0 Sep 19 18:46 ./perm_file.txt

Exact given permissions should be there, no other permissions
[ec2-user@ip-172-31-36-254 find_utility]$ find . -perm u=r -perm g=r -perm o=r -type f -exec ls -l {} \;
-r--r--r--. 1 ec2-user ec2-user 0 Sep 19 18:46 ./new_perm_file.txt

All given permissions should be set, irrespective of other permissions
[ec2-user@ip-172-31-36-254 find_utility]$ find . -perm -u=r,g=r,o=r -type f -exec ls -l {} \;
-rwxrwxr-x. 1 ec2-user ec2-user 179 Sep 19 17:33 ./create_sample_files.sh
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./MybashProgram.sh
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./mycprogram.c
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./MyCProgram.c
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./Program.c
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./backup/MybashProgram.sh
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./backup/mycprogram.c
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./backup/MyCProgram.c
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./backup/Program.c

Any given permissions should be set, irrespective of other permissions
[ec2-user@ip-172-31-36-254 find_utility]$ find . -perm /u=r,g=r,o=r -type f -exec ls -l {} \;
-rwxrwxr-x. 1 ec2-user ec2-user 179 Sep 19 17:33 ./create_sample_files.sh
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./MybashProgram.sh
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./mycprogram.c
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./MyCProgram.c
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./Program.c
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./backup/MybashProgram.sh
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./backup/mycprogram.c
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./backup/MyCProgram.c
-rw-rw-r--. 1 ec2-user ec2-user 0 Sep 19 17:36 ./backup/Program.c
----r-----. 1 ec2-user ec2-user 0 Sep 19 18:46 ./perm_file.txt


Some more examples on -perm option --
 
find . -perm 664
Search for files which have read and write permission for their owner, and group, but which other users can read but not write to.       

find . -perm -664
Search  for  files  which  have read and write permission for their owner and group, and which other users can read, without regard to the presence of any extra
permission bits (for example the executable bit).  

find . -perm /222
Search for files which are writable by somebody (their owner, or their group, or anybody else).

find . -perm /220
find . -perm /u+w,g+w
find . -perm /u=w,g=w

All three of these commands do the same thing, but the first one uses the octal representation of the file mode, and the other two use the symbolic form.  These
commands  all  search  for files which are writable by either their owner or their group.  The files don't have to be writable by both the owner and group to be
matched; either will do.

find . -perm -220
find . -perm -g+w,u+w

Both these commands do the same thing; search for files which are writable by both their owner and their group.

find . -perm -444 -perm /222 ! -perm /111
find . -perm -a+r -perm /a+w ! -perm /a+x

These two commands both search for files that are readable for everybody ( -perm -444 or -perm -a+r), have at least one write bit set  (-perm  /222  or  -perm
/a+w) but are not executable for anybody ( ! -perm /111 and ! -perm /a+x respectively).


Below 2 find commands do the same thing. -print option is default for find. 
find . -type f -path "*.sh" 
find . -type f -path "*.sh" -print


-path is the exact same as name, except that it doesn't only apply on the filename, but the whole path (the path that would be outputted).
Search text only in *.sh
sudo used to avoid permission denied errors

All 3 commands below does the same thing. R/r is optional here as find gives absolute path of each file

[ec2-user@ip-172-31-36-254 /]$ sudo find . -type f -path "*.sh" -exec grep -rwil 'id' {} \; | wc -l
25
[ec2-user@ip-172-31-36-254 /]$ sudo find . -type f -path "*.sh" -exec grep -wil 'id' {} \; | wc -l
25
[ec2-user@ip-172-31-36-254 /]$ sudo find . -type f -path "*.sh" -exec grep -Rwil 'id' {} \; | wc -l
25

Actual files found are 250, but case-insensitive whole word 'id' is found only in 25 files.
[ec2-user@ip-172-31-36-254 /]$ sudo find . -type f -path "*.sh" | wc -l
250


grep flags -
i stands for ignore case.
l stands for "show the file name, not the result itself".
R/r stands for recursive.
w stands for whole word


To find and report all C language source code files starting at the current directory, enter
find . -name \*.c -print


empty -  Find all empty files (zero byte file) 

find -empty 

[ec2-user@ip-172-31-36-254 sample]$ find -empty
./sample1.txt
./sample2.txt
./Doddy
./find_utility/MybashProgram.sh
./find_utility/mycprogram.c
./find_utility/MyCProgram.c
./find_utility/Program.c
./find_utility/backup/MybashProgram.sh
./find_utility/backup/mycprogram.c
./find_utility/backup/MyCProgram.c
./find_utility/backup/Program.c
./find_utility/perm_file.txt
./test-file-name
./new-test-file-name


-not - Negation opeator in find
Show only the non-hidden empty files only in the current directory


[ec2-user@ip-172-31-36-254 sample]$ find . -empty -not -name ".*"
./sample1.txt
./sample2.txt
./Doddy
./find_utility/MybashProgram.sh
./find_utility/mycprogram.c
./find_utility/MyCProgram.c
./find_utility/Program.c
./find_utility/backup/MybashProgram.sh
./find_utility/backup/mycprogram.c
./find_utility/backup/MyCProgram.c
./find_utility/backup/Program.c
./find_utility/perm_file.txt
./test-file-name
./new-test-file-name

! can also be used for negation in find

[ec2-user@ip-172-31-36-254 sample]$ find . -empty ! -name "sample*"
./Doddy
./find_utility/MybashProgram.sh
./find_utility/mycprogram.c
./find_utility/MyCProgram.c
./find_utility/Program.c
./find_utility/backup/MybashProgram.sh
./find_utility/backup/mycprogram.c
./find_utility/backup/MyCProgram.c
./find_utility/backup/Program.c
./find_utility/perm_file.txt
./test-file-name
./new-test-file-name

Finding the Top 5 small Files
sort -n -r - sort by numbers in descending order (r for reverse)

[ec2-user@ip-172-31-36-254 find_utility]$ find . -type f -exec ls -s {} \; | sort -n  | head -5
0 ./backup/MybashProgram.sh
0 ./backup/mycprogram.c
0 ./backup/MyCProgram.c
0 ./backup/Program.c
0 ./MybashProgram.sh


Finding the Top 5 Big Files
sort -n - sort by numbers in ascending order

[ec2-user@ip-172-31-36-254 find_utility]$ find . -type f -exec ls -s {} \; | sort -n -r | head -5
4 ./create_sample_files.sh
0 ./Program.c
0 ./perm_file.txt
0 ./MyCProgram.c
0 ./mycprogram.c

Show files which are modified after the specified file (comparing with the modification time)

[ec2-user@ip-172-31-36-254 find_utility]$ ls -ltr
total 4
-rwxrwxr-x. 1 ec2-user ec2-user 179 Sep 19 17:33 create_sample_files.sh
-rw-rw-r--. 1 ec2-user ec2-user   0 Sep 19 17:36 MybashProgram.sh
-rw-rw-r--. 1 ec2-user ec2-user   0 Sep 19 17:36 mycprogram.c
-rw-rw-r--. 1 ec2-user ec2-user   0 Sep 19 17:36 MyCProgram.c
-rw-rw-r--. 1 ec2-user ec2-user   0 Sep 19 17:36 Program.c
drwxrwxr-x. 2 ec2-user ec2-user  87 Sep 19 17:36 backup
----r-----. 1 ec2-user ec2-user   0 Sep 19 18:46 perm_file.txt

[ec2-user@ip-172-31-36-254 find_utility]$ find -maxdepth 1 -newer Program.c
.
./backup
./perm_file.txt


[ec2-user@ip-172-31-36-254 find_utility]$ find -type f -maxdepth 1 -newer Program.c
find: warning: you have specified the -maxdepth option after a non-option argument -type, but options are not positional (-maxdepth affects tests specified before it as well as those specified after it).  Please specify options before other arguments.

./perm_file.txt

[ec2-user@ip-172-31-36-254 find_utility]$ find -maxdepth 1 -type f -newer Program.c
./perm_file.txt


-size option you can find files by size.
Using sudo to avoid permission denied error

Find files bigger than the given size

[ec2-user@ip-172-31-36-254 find_utility]$ sudo find / -maxdepth 3 -size +100M
/proc/kcore


Find files smaller than the given size

[ec2-user@ip-172-31-36-254 find_utility]$ sudo find / -maxdepth 3 -size -100M | more
/
/dev
/dev/vcsa6
/dev/vcs6
/dev/fb0
/dev/dri
/dev/dri/by-path
	........

Find files that matches the exact given size

[ec2-user@ip-172-31-36-254 find_utility]$ sudo find / -maxdepth 3 -size 100M | more
 
 
To find the files based up on the content modification time, the option -mmin, and -mtime is used

-mmin n  - File’s data was last modified n minutes ago.

[ec2-user@ip-172-31-36-254 ~]$ find . -mmin -60
.
./.lesshst

-mtime n  - File’s data was last modified n*24 hours (n days) ago.

[ec2-user@ip-172-31-36-254 ~]$ date
Tue Sep 22 21:56:58 UTC 2020


Modification time after -2 days from now (i.e. after 20th) - example - -rw-------. 1 ec2-user ec2-user 16466 Sep 22 19:34 .bash_history
 
[ec2-user@ip-172-31-36-254 scripts]$ find ~ -mtime -2
/home/ec2-user
/home/ec2-user/.bash_history
/home/ec2-user/sample
/home/ec2-user/sample/employee.txt
/home/ec2-user/sample/seinfeld-characters
/home/ec2-user/sample/sample8.txt
/home/ec2-user/sample/sample10.txt
/home/ec2-user/sample/scripts
/home/ec2-user/sample/scripts/script1.sh
/home/ec2-user/.lesshst
/home/ec2-user/.config
/home/ec2-user/.config/procps


Modification time before -2 days from now (before 20th) - example -rw-r--r--. 1 ec2-user ec2-user    18 Aug 30  2019 .bash_logout

-rw-r--r--. 1 ec2-user ec2-user    18 Aug 30  2019 .bash_logout

[ec2-user@ip-172-31-36-254 sample]$ find ~ -mtime +2
/home/ec2-user/.bash_logout
/home/ec2-user/.bash_profile
/home/ec2-user/.bashrc
/home/ec2-user/.ssh
/home/ec2-user/.ssh/authorized_keys
/home/ec2-user/sample/Adv Parent Topics
/home/ec2-user/sample/sample1.txt
/home/ec2-user/sample/sample2.txt
/home/ec2-user/sample/Doddy
/home/ec2-user/sample/sample4.txt
/home/ec2-user/sample/sample3.txt
/home/ec2-user/sample/demo_file
/home/ec2-user/sample/demo_file1
/home/ec2-user/sample/demo_text
/home/ec2-user/sample/find_utility
/home/ec2-user/sample/find_utility/create_sample_files.sh
/home/ec2-user/sample/find_utility/MybashProgram.sh
/home/ec2-user/sample/find_utility/mycprogram.c
/home/ec2-user/sample/find_utility/MyCProgram.c
/home/ec2-user/sample/find_utility/Program.c
/home/ec2-user/sample/find_utility/backup
/home/ec2-user/sample/find_utility/backup/MybashProgram.sh
/home/ec2-user/sample/find_utility/backup/mycprogram.c
/home/ec2-user/sample/find_utility/backup/MyCProgram.c
/home/ec2-user/sample/find_utility/backup/Program.c
/home/ec2-user/sample/find_utility/perm_file.txt
/home/ec2-user/sample/test-file-name
/home/ec2-user/sample/new-test-file-name


Using more than one {} in same command

# find -name "*.txt" cp {} {}.bkup \;
 
-------------------------------------------------------------------------
sort - sort results either alphabetically or numerically

[ec2-user@ip-172-31-36-254 sample]$ sort demo_file

And this is the last line.
This Line Has All Its First Character Of The Word With Upper Case.
this line is the 1st lower case line in this file.
THIS LINE IS THE 1ST UPPER CASE LINE IN THIS FILE.
Two lines above this line is empty.

[ec2-user@ip-172-31-36-254 sample]$ sort demo_file demo_file1


And this is the last line.
And this is the last line.
This Line Has All Its First Character Of The Word With Upper Case.
This Line Has All Its First Character Of The Word With Upper Case.
this line is the 1st lower case line in this file.
this line is the 1st lower case line in this file.
THIS LINE IS THE 1ST UPPER CASE LINE IN THIS FILE.
THIS LINE IS THE 1ST UPPER CASE LINE IN THIS FILE.
Two lines above this line is empty.
Two lines above this line is empty.

sort -r - Returns results in reverse order 

[ec2-user@ip-172-31-36-254 sample]$ sort -r demo_file
Two lines above this line is empty.
THIS LINE IS THE 1ST UPPER CASE LINE IN THIS FILE.
this line is the 1st lower case line in this file.
This Line Has All Its First Character Of The Word With Upper Case.
And this is the last line.


sort -f - Case insensitive sorting

[ec2-user@ip-172-31-36-254 sample]$ sort sample5.txt
salil
SALIL
sally
SALLY
sarah
SARAH
steven
STEVEN
[ec2-user@ip-172-31-36-254 sample]$ sort -f sample5.txt
SALIL
salil
SALLY
sally
SARAH
sarah
STEVEN
steven

sort -n - sort results as per numerical order
 
[ec2-user@ip-172-31-36-254 find_utility]$ ls -1s | sort -n
0 backup
0 MybashProgram.sh
0 mycprogram.c
0 MyCProgram.c
0 perm_file.txt
0 Program.c
total 4
4 create_sample_files.sh

-------------------------------------------------------------------------
Compression/Decompression in Linux

1) tar - To compress/decompress files with .tar format

Creating an uncompressed tar archive using option cvf

tar -cvf archive_name.tar dirname/

c – create a new archive
v – verbosely list files which are processed.
f – following is the archive file name


The above tar cvf option, does not provide any compression. To use a gzip compression on the tar archive, use the z option 
Creating a tar gzipped archive using option cvzf

tar -cvzf archive_name.tar.gz dirname/

z – filter the archive through gzip


DeCompress/extract file/dir

Extract a *.tar file using option xvf

tar -xvf archive_name.tar

x – extract files from archive

Extract a gzipped tar archive ( *.tar.gz ) using option xvzf

$ tar -xvfz archive_name.tar.gz

z - for uncompressing a gzip tar archive.


View the tar archive file content without extracting using option tvf

tar -tvf archive_name.tar

View the *.tar.gz file content without extracting using option tvzf

tar -tvfz archive_name.tar.gz

Use r option to append a file/dir to *.tar file

tar -rvf archive_name.tar newfile

You cannot add file or directory to a compressed archive. If you try to do so, you will get “tar: Cannot update compressed archives” error as shown below.

$ tar rvfz archive_name.tgz newfile

tar: Cannot update compressed archives
Try `tar --help' or `tar --usage' for more information.

2) gzip -  To compress/decompress files with .gz format
 
Compression to .gz format
gzip <file/dir>

 
Decompress .gz file
gunzip <.gz file>

-q --quiet - Suppress all warnings as below
This option is useful in scripts 

sample10.txt.gz is already compressed 

[ec2-user@ip-172-31-36-254 sample]$ gzip sample10.txt.gz
gzip: sample10.txt.gz already has .gz suffix -- unchanged

[ec2-user@ip-172-31-36-254 sample]$ gzip -q sample10.txt.gz

sample10.txt is not compressed

[ec2-user@ip-172-31-36-254 sample]$ gunzip sample10.txt
gzip: sample10.txt: unknown suffix -- ignored

[ec2-user@ip-172-31-36-254 sample]$ gunzip -q sample10.txt

 
-------------------------------------------------------------------------
Processes in Linux

An instance of a program is called as a process.
There can be multiple processes (instances) of the same program/application/service.
Any command given to Linux kernel starts a new process.
Process can be a foreground Process or background Process.
Every process can have multiple threads associated with it.
Job or workorder (created by a scheduler like crontab) is a service or process which runs at a scheduled time.
Daemon is a process which continuously runs in the background untill interrupted.

top - display Linux processes with PID, CPU/memory usages and other details
top command used for system monitoring.

PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND
1   root      20   0  179132  13624   9192 S   0.0   1.6   0:04.37 systemd
2   root      20   0       0      0      0 S   0.0   0.0   0:00.02 kthreadd
3   root       0 -20       0      0      0 I   0.0   0.0   0:00.00 rcu_gp
4   root       0 -20       0      0      0 I   0.0   0.0   0:00.00 rcu_par_gp

PID - Process Id
USER - User name who started the process
PR - Priority (-20 to 20)
NI - Niceness Value (-20 to 20) - Niceness Value and priority are inversely proportional 
VRT - Virtual Memory
RES - Physical Memory
SHR - Shared Memory
S - Status
%CPU - CPU Usage
%MEM - Memory Usage
TIME+ - Total CPU time since started
Command - Command/program name

press cntrl-C to quit from top command

cntrl-Z - Push a process to background

fg <process-name> - Bring process to foreground
bg <process-name> - Push a process to background

List Currently Running Processes 

ps -ef - Get all the processes


[ec2-user@ip-172-31-36-254 ~]$ ps -ef
UID          PID    PPID  C STIME TTY          TIME CMD
root           1       0  0 Sep18 ?        00:00:04 /usr/lib/systemd/systemd --switched-root --system --deserialize 16
root           4       2  0 Sep18 ?        00:00:00 [rcu_par_gp]
root           6       2  0 Sep18 ?        00:00:00 [kworker/0:0H-kblockd]
root         460       2  0 Sep18 ?        00:00:00 [scsi_eh_1]
dbus         713       1  0 Sep18 ?        00:00:00 /usr/bin/dbus-daemon --system --address=systemd: --nofork --nopidfile --systemd-activation --syslog-only
polkitd      715       1  0 Sep18 ?        00:00:00 /usr/lib/polkit-1/polkitd --no-debug
chrony       730       1  0 Sep18 ?        00:00:02 /usr/sbin/chronyd
rngd         743       1  0 Sep18 ?        00:00:06 /sbin/rngd -f --fill-watermark=0
-oCiphers=aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,aes256-ctr,aes256-cbc,aes128-gcm@openss
root        1285       1  0 Sep18 ?        00:00:02 /usr/sbin/NetworkManager --no-daemon
root        6409       2  0 Sep19 ?        00:00:00 [kworker/u30:0-events_unbound]
root       15025       2  0 Sep20 ?        00:00:00 [kworker/u30:1]
root       15232    1170  0 00:55 ?        00:00:00 sshd: ec2-user [priv]
ec2-user   15236       1  0 00:55 ?        00:00:00 /usr/lib/systemd/systemd --user
ec2-user   15241   15236  0 00:55 ?        00:00:00 (sd-pam)
ec2-user   15247   15232  0 00:55 ?        00:00:00 sshd: ec2-user@pts/0
ec2-user   15248   15247  0 00:55 pts/0    00:00:00 -bash
ec2-user   15352   15248  0 01:18 pts/0    00:00:00 top
root       15353       2  0 01:23 ?        00:00:00 [kworker/0:1-events]
root       15359       2  0 01:28 ?        00:00:00 [kworker/0:2-events]
ec2-user   15363   15248  0 01:34 pts/0    00:00:00 ps -ef

-e to display all the processes.
-f to display full format listing.

Get all the processes for a specific user - ec2-user

[ec2-user@ip-172-31-36-254 ~]$ ps -f -u ec2-user
UID          PID    PPID  C STIME TTY          TIME CMD
ec2-user   15236       1  0 00:55 ?        00:00:00 /usr/lib/systemd/systemd --user
ec2-user   15241   15236  0 00:55 ?        00:00:00 (sd-pam)
ec2-user   15247   15232  0 00:55 ?        00:00:00 sshd: ec2-user@pts/0
ec2-user   15248   15247  0 00:55 pts/0    00:00:00 -bash
ec2-user   15352   15248  0 01:18 pts/0    00:00:00 top
ec2-user   15403   15248  0 01:43 pts/0    00:00:00 ps -f -u ec2-user


-u option to displays the process that belongs to a specific username.
-f to display full format listing.


Often ps is used with grep like “ps -ef | grep <command>” to get the list of process with the given command.
But ps command itself has an option to achieve the same. The following example shows that all the processes which has tatad.pl in its command execution.

ps -f -C tatad.pl

UID        PID  PPID  C STIME TTY          TIME CMD
root      9576     1  0 Mar09 ?        00:00:00 /opt/tata/perl/bin/perl /opt/tata/bin/tatad.pl
root      9577  9576  0 Mar09 ?        00:00:00 /opt/tata/perl/bin/perl /opt/tata/bin/tatad.pl


PID - Process Id
PPID - Parent Process Id

The following example is used to get a list of processes with a particular PPID.
ps -f --ppid 9576

The following example is to list the processes which has given PID.
ps -f  -p 25009,7258,2426

List all threads for a particular process (ps -L)

ps -C java -L -o pid,tid,pcpu,state,nlwp,args

PID   TID %CPU S NLWP COMMAND
16992 16992  0.0 S   15 ../jre/bin/java -Djava.ext.dirs=../jre/lib/ext:../lib:../auto_lib -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5006

16992 16993  0.0 S   15 ../jre/bin/java -Djava.ext.dirs=../jre/lib/ext:../lib:../auto_lib -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5006


Finding memory Leak (ps –sort pmem)

ps aux --sort pmem

USER       PID %CPU %MEM   VSZ  RSS TTY      STAT START   TIME COMMAND
root         1  0.0  0.0  1520  508 ?        S     2005   1:27 init
inst  1309  0.0  0.4 344308 33048 ?      S     2005   1:55 agnt (idle)
inst  2919  0.0  0.4 345580 37368 ?      S     2005  20:02 agnt (idle)
inst 24594  0.0  0.4 345068 36960 ?      S     2005  15:45 agnt (idle)
root 27645  0.0 14.4 1231288 1183976 ?   S     2005   3:01 /TaskServer/bin/./wrapper-linux-x86-32

In the above ps command, –sort option outputs the highest %MEM at bottom. Just note down the PID for the highest %MEM usage. Then use ps command to view all the details about this process id, and monitor the change over time.

List Processes in a Hierarchy (ps –forest)
-o - Specify user-defined format


ps -e -o pid,args --forest
  468  \_ sshd: root@pts/7
  514  |   \_ -bash
17484  \_ sshd: root@pts/11
17513  |   \_ -bash
24004  |       \_ vi ./790310__11117/journal
15513  \_ sshd: root@pts/1
15522  |   \_ -bash
 4280  \_ sshd: root@pts/5
 4302  |   \_ -bash


pidof <Command-name> - Get pid of a particular process

[ec2-user@ip-172-31-36-254 ~]$ pidof top
15352

kill <SIGNAL> <PID> - Kills the process with PID

SIGKILL	9	Kill signal - Instant kill
SIGTERM	15	Termination signal - Graceful kill

$ ps -ef | grep firefox
1986 ?        Sl     7:22 /usr/lib/firefox-3.5.3/firefox

$ kill -9 1986

When killing a process or series of processes, it is common sense to start trying with the least dangerous signal, SIGTERM. That way, programs that care about an orderly shutdown get the chance to follow the procedures that they have been designed to execute when getting the SIGTERM signal, such as cleaning up and closing open files. If you send a SIGKILL to a process, you remove any chance for the process to do a tidy cleanup and shutdown, which might have unfortunate consequences.


Killall <SIGNAL> <Command> – Kill processes by name. If more than one process runs with that name, all of them will be killed.

$ killall -9 firefox

systemctl - Control the systemd system and service manager

Check status of chronyd service

[ec2-user@ip-172-31-36-254 ~]$ systemctl status chronyd
● chronyd.service - NTP client/server
   Loaded: loaded (/usr/lib/systemd/system/chronyd.service; enabled; vendor preset: enabled)
   Active: active (running) since Fri 2020-09-18 17:04:00 UTC; 3 days ago
     Docs: man:chronyd(8)
           man:chrony.conf(5)
 Main PID: 730 (chronyd)
    Tasks: 1 (limit: 4936)
   Memory: 1.8M
   CGroup: /system.slice/chronyd.service
           └─730 /usr/sbin/chronyd

Sep 18 17:04:00 localhost.localdomain systemd[1]: Starting NTP client/server...
Sep 18 17:04:00 localhost.localdomain chronyd[730]: chronyd version 3.5 starting (+CMDMON +NTP +REFCLOCK +RTC +PRIVDROP +SCFILTER +SIGND +ASYNCDNS +SECHASH +IPV6 +DEBUG)
Sep 18 17:04:00 localhost.localdomain chronyd[730]: Using right/UTC timezone to obtain leap second data
Sep 18 17:04:00 localhost.localdomain systemd[1]: Started NTP client/server.
Sep 18 17:04:08 localhost.localdomain chronyd[730]: Selected source 169.254.169.123
Sep 18 17:04:08 localhost.localdomain chronyd[730]: System clock TAI offset set to 37 seconds


Check process details for service chronyd

[ec2-user@ip-172-31-36-254 ~]$ ps -ef | grep chronyd
chrony       730       1  0 Sep18 ?        00:00:03 /usr/sbin/chronyd
ec2-user   18044   17995  0 00:21 pts/0    00:00:00 grep --color=auto chronyd

Restart service chronyd -

[ec2-user@ip-172-31-36-254 ~]$ sudo systemctl restart chronyd

[ec2-user@ip-172-31-36-254 ~]$ systemctl status chronyd
● chronyd.service - NTP client/server
   Loaded: loaded (/usr/lib/systemd/system/chronyd.service; enabled; vendor preset: enabled)
   Active: active (running) since Tue 2020-09-22 00:26:18 UTC; 5s ago
     Docs: man:chronyd(8)
           man:chrony.conf(5)
  Process: 18076 ExecStartPost=/usr/libexec/chrony-helper update-daemon (code=exited, status=0/SUCCESS)
  Process: 18072 ExecStart=/usr/sbin/chronyd $OPTIONS (code=exited, status=0/SUCCESS)
 Main PID: 18074 (chronyd)
    Tasks: 1 (limit: 4936)
   Memory: 980.0K
   CGroup: /system.slice/chronyd.service
           └─18074 /usr/sbin/chronyd

Sep 22 00:26:18 ip-172-31-36-254.us-east-2.compute.internal systemd[1]: Stopped NTP client/server.
Sep 22 00:26:18 ip-172-31-36-254.us-east-2.compute.internal systemd[1]: Starting NTP client/server...
Sep 22 00:26:18 ip-172-31-36-254.us-east-2.compute.internal chronyd[18074]: chronyd version 3.5 starting (+CMDMON +NTP +REFCLOCK +RTC +PRIVDROP +SCFILTER +SIGND +ASYNCDNS >
Sep 22 00:26:18 ip-172-31-36-254.us-east-2.compute.internal chronyd[18074]: Frequency 7.603 +/- 0.021 ppm read from /var/lib/chrony/drift
Sep 22 00:26:18 ip-172-31-36-254.us-east-2.compute.internal chronyd[18074]: Using right/UTC timezone to obtain leap second data
Sep 22 00:26:18 ip-172-31-36-254.us-east-2.compute.internal systemd[1]: Started NTP client/server.

Stop chronyd service 

[ec2-user@ip-172-31-36-254 ~]$ sudo systemctl stop chronyd

[ec2-user@ip-172-31-36-254 ~]$ ps -ef | grep chronyd
ec2-user   18105   17995  0 00:29 pts/0    00:00:00 grep --color=auto chronyd

[ec2-user@ip-172-31-36-254 ~]$ systemctl status chronyd
● chronyd.service - NTP client/server
   Loaded: loaded (/usr/lib/systemd/system/chronyd.service; enabled; vendor preset: enabled)
   Active: inactive (dead) since Tue 2020-09-22 00:29:02 UTC; 24s ago
     Docs: man:chronyd(8)
           man:chrony.conf(5)
  Process: 18076 ExecStartPost=/usr/libexec/chrony-helper update-daemon (code=exited, status=0/SUCCESS)
  Process: 18072 ExecStart=/usr/sbin/chronyd $OPTIONS (code=exited, status=0/SUCCESS)
 Main PID: 18074 (code=exited, status=0/SUCCESS)

Sep 22 00:26:18 ip-172-31-36-254.us-east-2.compute.internal systemd[1]: Starting NTP client/server...
Sep 22 00:26:18 ip-172-31-36-254.us-east-2.compute.internal chronyd[18074]: chronyd version 3.5 starting (+CMDMON +NTP +REFCLOCK +RTC +PRIVDROP +SCFILTER +SIGND +ASYNCDNS >
Sep 22 00:26:18 ip-172-31-36-254.us-east-2.compute.internal chronyd[18074]: Frequency 7.603 +/- 0.021 ppm read from /var/lib/chrony/drift
Sep 22 00:26:18 ip-172-31-36-254.us-east-2.compute.internal chronyd[18074]: Using right/UTC timezone to obtain leap second data
Sep 22 00:26:18 ip-172-31-36-254.us-east-2.compute.internal systemd[1]: Started NTP client/server.
Sep 22 00:26:23 ip-172-31-36-254.us-east-2.compute.internal chronyd[18074]: Selected source 209.51.161.238
Sep 22 00:26:23 ip-172-31-36-254.us-east-2.compute.internal chronyd[18074]: System clock TAI offset set to 37 seconds
Sep 22 00:26:24 ip-172-31-36-254.us-east-2.compute.internal chronyd[18074]: Selected source 169.254.169.123
Sep 22 00:29:02 ip-172-31-36-254.us-east-2.compute.internal systemd[1]: Stopping NTP client/server...
Sep 22 00:29:02 ip-172-31-36-254.us-east-2.compute.internal systemd[1]: Stopped NTP client/server.

Enable a service - systemctl enable chronyd

-------------------------------------------------------------------------
Crontab - Job scheduler in Linux--

Reference - https://www.hostinger.com/tutorials/cron-job

A crontab file has five fields – each field is represented by an asterisk – to determine the date and time of a certain task set to perform repeatedly.

Minute — minute of the hour the command will run on, ranging from 0 to 59.
Hour — on what hour the command will run on, ranging from 0 to 23.
Day of the month — on what day of the month you want the command run, ranging from 1 to 31.
Month — on what month will the specified command run on, ranging from 1 to 12.
Day of the week — on what day of the week you want a command run, ranging from 0 to 7.

Some examples --

* * * * * /bin/sh backup.sh cronjob means that it will run a backup every minute.
0 0 * * * /bin/sh backup.sh	To perform a database backup at midnight, and run once a day.
0 6,18 * * * /bin/sh backup.sh	To perform a database backup twice a day at 6 AM and 6 PM.
0 */6 * * * /scripts/monitor.sh	To perform monitoring every six hours.
*/10 * * * * /home/user/script.sh	To perform a cron job for the script file located in the home directory every 10 minutes.
0 * 20 7 * /bin/sh backup.sh	To run a database backup every hour every 20th of July.
0 0 * * 2 * /bin/sh	To run a database backup at midnight every Tuesday.
* * * 1,2,5 *  /script/script.sh	To run a command in January, February, and May.
10-59/5 5 * * * /home/user/script.sh	To run a command every 5 minutes at 5 AM, starting at 5:10 AM.
0 8 1 */3 * /home/user/script.sh	To run a command quarterly on the 1st day at 8 AM.
* * * * * /scripts/script.sh; /scripts/scrit2.sh	To set a schedule for multiple jobs on a single cron job.
@reboot /scripts/script.sh	To perform a certain task every time you start the system.
0 0 1 * *  /home/user/script.sh	To run a command on the first day of every month

Cron Permissions --

/etc/cron.allow – if the cron.allow exists, it must contain the user’s name for the user to use cron jobs.
/etc/cron.deny – if the cron.allow file doesn’t exist but the cron.deny file does, then to use cron jobs the user must not be listed in the cron.deny file.

The default system crontab file is /etc/crontab

[ec2-user@ip-172-31-36-254 ~]$ ls -ltr /etc/cron*
-rw-r--r--. 1 root root 451 Aug 12  2018 /etc/crontab
-rw-r--r--. 1 root root   0 Jun 12  2019 /etc/cron.deny

/etc/cron.weekly:
total 0

/etc/cron.monthly:
total 0

/etc/cron.d:
total 4
-rw-r--r--. 1 root root 128 Jun 12  2019 0hourly

/etc/cron.hourly:
total 4
-rwxr-xr-x. 1 root root 575 Jun 12  2019 0anacron

/etc/cron.daily:
total 8
-rwxr-xr-x. 1 root root 189 Jan  4  2018 logrotate
-rwx------. 1 root root 653 Apr  2 16:37 rhsmd

Here are some of the basic commands:

$ crontab -e — to create and edit a crontab file.
$ crontab -u username -e — to edit other user’s crontab file with superuser access.
$ crontab -l — to view the list of crontab file of the current users.
$ crontab -r — to remove the crontab files.
$ crontab -i - This is the same as -r,  however, it prompts the user with a yes/no option before removing the crontab
$ crontab -a filename — to install the filename as a crontab file (on some systems, –a is not needed).

If some commands inside a cronjob needs root access, then schedule cronjob itself for a root/superuser account and NOT for regular user account.
sudo crontab -e

-------------------------------------------------------------------------
Network commands in Linux--

The easiest way to find your IP address on Linux is with ifconfig or ip command.
IP of this machine is - 172.31.36.254

[ec1-user@ip-172-31-36-254 ~]$ ip addr show
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc fq_codel state UP group default qlen 1000
    link/ether 0a:53:4f:78:58:18 brd ff:ff:ff:ff:ff:ff
    inet 172.31.36.254/20 brd 172.31.47.255 scope global dynamic noprefixroute eth0
       valid_lft 2979sec preferred_lft 2979sec
    inet6 fe80::853:4fff:fe78:5818/64 scope link
       valid_lft forever preferred_lft forever


ifconfig - interfaces information

[ec1-user@ip-172-31-36-254 ~]$ ifconfig
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 9001
        inet 172.31.36.254  netmask 255.255.240.0  broadcast 172.31.47.255
        inet6 fe80::853:4fff:fe78:5818  prefixlen 64  scopeid 0x20<link>
        ether 0a:53:4f:78:58:18  txqueuelen 1000  (Ethernet)
        RX packets 96222  bytes 52013446 (49.6 MiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 64432  bytes 22283404 (21.2 MiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

ifup/ifdown - To bring the interface up/down

netstat - Print network connections, routing tables, interface statistics, masquerade connections, and multicast memberships

[ec2-user@ip-172-31-36-254 ~]$ netstat
Active Internet connections (w/o servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State
tcp        0     64 ip-172-31-36-254.us:ssh c-75-64-225-206.h:50439 ESTABLISHED
udp        0      0 ip-172-31-36-254:bootpc ip-172-31-32-1.u:bootps ESTABLISHED
Active UNIX domain sockets (w/o servers)
Proto RefCnt Flags       Type       State         I-Node   Path
unix  2      [ ]         DGRAM                    226322   /var/run/chrony/chronyd.sock
unix  3      [ ]         DGRAM                    11819    /run/systemd/notify


[ec2-user@ip-172-31-36-254 ~]$ netstat -rnv
Kernel IP routing table
Destination     Gateway         Genmask         Flags   MSS Window  irtt Iface
0.0.0.0         172.31.32.1     0.0.0.0         UG        0 0          0 eth0
172.31.32.0     0.0.0.0         255.255.240.0   U         0 0          0 eth0



ping - send ICMP ECHO_REQUEST to network hosts

[ec2-user@ip-172-31-36-254 ~]$ ping www.google.com
PING www.google.com (172.217.1.36) 56(84) bytes of data.
64 bytes from ord37s07-in-f36.1e100.net (172.217.1.36): icmp_seq=1 ttl=101 time=16.9 ms
64 bytes from ord37s07-in-f36.1e100.net (172.217.1.36): icmp_seq=2 ttl=101 time=16.10 ms
64 bytes from ord37s07-in-f36.1e100.net (172.217.1.36): icmp_seq=3 ttl=101 time=16.9 ms
64 bytes from ord37s07-in-f36.1e100.net (172.217.1.36): icmp_seq=4 ttl=101 time=16.9 ms
64 bytes from ord37s07-in-f36.1e100.net (172.217.1.36): icmp_seq=5 ttl=101 time=16.9 ms
64 bytes from ord37s07-in-f36.1e100.net (172.217.1.36): icmp_seq=6 ttl=101 time=17.2 ms
64 bytes from ord37s07-in-f36.1e100.net (172.217.1.36): icmp_seq=7 ttl=101 time=16.10 ms
64 bytes from ord37s07-in-f36.1e100.net (172.217.1.36): icmp_seq=8 ttl=101 time=16.9 ms
^Z
[1]+  Stopped                 ping www.google.com

tcpdump - Sniffing tool for an interface - traces every single nw transaction coming / going from machine
tcpdump -i eth0 - sniffing interface eth0


-------------------------------------------------------------------------
Misc commands in Linux--

date - Get Today's date and Time

[ec2-user@ip-172-31-36-254 sample]$ date
Mon Sep 21 21:29:30 UTC 2020

date -s - Set Date and Time with root/super access

[ec2-user@ip-172-31-36-254 ~]$ sudo date -s "12 Mar 2018 13:20:00"


uptime - System uptime details

How long system has been running?
How many users currently logged into the system?
The avg CPU load - Load avg.
Current system time 

[ec2-user@ip-172-31-36-254 sample]$ uptime
 21:29:55 up 3 days,  4:26,  1 user,  load average: 0.00, 0.00, 0.00

[ec2-user@ip-172-31-36-254 sample]$ uname
Linux

which <cmd> - Path of <cmd> 

[ec2-user@ip-172-31-36-254 sample]$ which pwd
/usr/bin/pwd

[ec2-user@ip-172-31-36-254 sample]$ which date
/usr/bin/date

[ec2-user@ip-172-31-36-254 sample]$ which bash
/usr/bin/bash

[ec2-user@ip-172-31-36-254 sample]$ whereis bash
bash: /usr/bin/bash /usr/share/man/man1/bash.1.gz /usr/share/info/bash.info.gz


[ec2-user@ip-172-31-36-254 bin]$ cal
   September 2020
Su Mo Tu We Th Fr Sa
       1  2  3  4  5
 6  7  8  9 10 11 12
13 14 15 16 17 18 19
20 21 22 23 24 25 26
27 28 29 30

[ec2-user@ip-172-31-36-254 bin]$ cal 2020
                               2020

       January               February                 March
Su Mo Tu We Th Fr Sa   Su Mo Tu We Th Fr Sa   Su Mo Tu We Th Fr Sa
          1  2  3  4                      1    1  2  3  4  5  6  7
 5  6  7  8  9 10 11    2  3  4  5  6  7  8    8  9 10 11 12 13 14
12 13 14 15 16 17 18    9 10 11 12 13 14 15   15 16 17 18 19 20 21
19 20 21 22 23 24 25   16 17 18 19 20 21 22   22 23 24 25 26 27 28
26 27 28 29 30 31      23 24 25 26 27 28 29   29 30 31

        April                   May                   June
Su Mo Tu We Th Fr Sa   Su Mo Tu We Th Fr Sa   Su Mo Tu We Th Fr Sa
          1  2  3  4                   1  2       1  2  3  4  5  6
 5  6  7  8  9 10 11    3  4  5  6  7  8  9    7  8  9 10 11 12 13
12 13 14 15 16 17 18   10 11 12 13 14 15 16   14 15 16 17 18 19 20
19 20 21 22 23 24 25   17 18 19 20 21 22 23   21 22 23 24 25 26 27
26 27 28 29 30         24 25 26 27 28 29 30   28 29 30
                       31
        July                  August                September
Su Mo Tu We Th Fr Sa   Su Mo Tu We Th Fr Sa   Su Mo Tu We Th Fr Sa
          1  2  3  4                      1          1  2  3  4  5
 5  6  7  8  9 10 11    2  3  4  5  6  7  8    6  7  8  9 10 11 12
12 13 14 15 16 17 18    9 10 11 12 13 14 15   13 14 15 16 17 18 19
19 20 21 22 23 24 25   16 17 18 19 20 21 22   20 21 22 23 24 25 26
26 27 28 29 30 31      23 24 25 26 27 28 29   27 28 29 30
                       30 31
       October               November               December
Su Mo Tu We Th Fr Sa   Su Mo Tu We Th Fr Sa   Su Mo Tu We Th Fr Sa
             1  2  3    1  2  3  4  5  6  7          1  2  3  4  5
 4  5  6  7  8  9 10    8  9 10 11 12 13 14    6  7  8  9 10 11 12
11 12 13 14 15 16 17   15 16 17 18 19 20 21   13 14 15 16 17 18 19
18 19 20 21 22 23 24   22 23 24 25 26 27 28   20 21 22 23 24 25 26
25 26 27 28 29 30 31   29 30                  27 28 29 30 31


bc - Calculator on command prompt

System Maintenance commands - 

shutdown - Bring down system gracefully.
init 0-6 - 0 - shutdown, 6 - reboot, 3 - multi-user mode
reboot - Reboot system
halt - Brings down system instantly. works like system power button

System monitoring commands - 

top - Explained above
df - report file system disk space usage

[ec2-user@ip-172-31-36-254 ~]$ df
Filesystem     1K-blocks    Used Available Use% Mounted on
devtmpfs          394996       0    394996   0% /dev
tmpfs             417784       0    417784   0% /dev/shm
tmpfs             417784   31740    386044   8% /run
tmpfs             417784       0    417784   0% /sys/fs/cgroup
/dev/xvda2      10473452 1215868   9257584  12% /
tmpfs              83556       0     83556   0% /run/user/1000

h - Human readable

[ec2-user@ip-172-31-36-254 ~]$ df -h
Filesystem      Size  Used Avail Use% Mounted on
devtmpfs        386M     0  386M   0% /dev
tmpfs           408M     0  408M   0% /dev/shm
tmpfs           408M   31M  377M   8% /run
tmpfs           408M     0  408M   0% /sys/fs/cgroup
/dev/xvda2       10G  1.2G  8.9G  12% /
tmpfs            82M     0   82M   0% /run/user/1000

du - Summarize disk usage of the set of FILEs, recursively for directories

du options -  

-S - for directories do not include size of subdirectories
h - Human readable

[ec2-user@ip-172-31-36-254 ~]$ du
4       ./.ssh
0       ./sample/Doddy
0       ./sample/find_utility/backup
4       ./sample/find_utility
56      ./sample
0       ./Doddy
0       ./.config/procps
0       ./.config
92      .

[ec2-user@ip-172-31-36-254 ~]$ du -h
4.0K    ./.ssh
0       ./sample/Doddy
0       ./sample/find_utility/backup
4.0K    ./sample/find_utility
56K     ./sample
0       ./Doddy
0       ./.config/procps
0       ./.config
92K     .

[ec2-user@ip-172-31-36-254 ~]$ du -S
4       ./.ssh
0       ./sample/Doddy
0       ./sample/find_utility/backup
4       ./sample/find_utility
52      ./sample
0       ./Doddy
0       ./.config/procps
0       ./.config
32      .

[ec2-user@ip-172-31-36-254 ~]$ du -Sh
4.0K    ./.ssh
0       ./sample/Doddy
0       ./sample/find_utility/backup
4.0K    ./sample/find_utility
52K     ./sample
0       ./Doddy
0       ./.config/procps
0       ./.config
32K     .


sort options - 

r - reverse
-h - Compare human readable numbers (e.g., 2K 1G)

[ec2-user@ip-172-31-36-254 ~]$ du -Sh | sort -h
0       ./.config
0       ./.config/procps
0       ./Doddy
0       ./sample/Doddy
0       ./sample/find_utility/backup
4.0K    ./sample/find_utility
4.0K    ./.ssh
32K     .
52K     ./sample


[ec2-user@ip-172-31-36-254 ~]$ du -Sh | sort -rh
52K     ./sample
32K     .
4.0K    ./.ssh
4.0K    ./sample/find_utility
0       ./sample/find_utility/backup
0       ./sample/Doddy
0       ./Doddy
0       ./.config/procps
0       ./.config


dmesg - print or control the kernel ring buffer. Diagnostic messages / errors about system hardware (BIOS, CPU/memory)

[ec2-user@ip-172-31-36-254 ~]$ dmesg | more
[    0.000000] Linux version 4.18.0-193.el8.x86_64 (mockbuild@x86-vm-08.build.eng.bos.redhat.com) (gcc version 8.3.1 20191121 (Red Hat 8.3.1-5) (GCC)) #1 SMP Fri Mar 27 14:
35:58 UTC 2020
[    0.000000] Command line: BOOT_IMAGE=(hd0,msdos2)/boot/vmlinuz-4.18.0-193.el8.x86_64 root=UUID=3510a17e-27dc-4ae2-9243-d600c16f4106 ro console=ttyS0,115200n8 console=tty
0 net.ifnames=0 rd.blacklist=nouveau nvme_core.io_timeout=4294967295 crashkernel=auto
[    0.000000] x86/fpu: Supporting XSAVE feature 0x001: 'x87 floating point registers'
[    0.000000] x86/fpu: Supporting XSAVE feature 0x002: 'SSE registers'
[    0.000000] x86/fpu: Supporting XSAVE feature 0x004: 'AVX registers'
[    0.000000] x86/fpu: xstate_offset[2]:  576, xstate_sizes[2]:  256
[    0.000000] x86/fpu: Enabled xstate features 0x7, context size is 832 bytes, using 'standard' format.
[    0.000000] BIOS-provided physical RAM map:
[    0.000000] BIOS-e820: [mem 0x0000000000000000-0x000000000009dfff] usable
[    0.000000] BIOS-e820: [mem 0x000000000009e000-0x000000000009ffff] reserved
[    0.000000] BIOS-e820: [mem 0x00000000000e0000-0x00000000000fffff] reserved
[    0.000000] BIOS-e820: [mem 0x0000000000100000-0x000000003fffffff] usable


iostat - Report Central Processing Unit (CPU) statistics and input/output statistics for devices and partitions.
iostat is a part of 'sysstat' package, we can install it on our system using the following command,

CentOS/RedHat [root@linuxtechi ~]# yum install sysstat -y.


[ec2-user@ip-172-31-36-254 ~]$ iostat
Linux 4.18.0-193.el8.x86_64 (ip-172-31-36-254.us-east-2.compute.internal)       09/22/2020      _x86_64_        (1 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           0.02    0.03    0.05    0.00    0.01   99.89

Device             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
xvda              0.17         1.15         2.38     336263     693651


netstat - Print network connections, routing tables, interface statistics, masquerade connections, and multicast memberships

[ec2-user@ip-172-31-36-254 ~]$ netstat
Active Internet connections (w/o servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State
tcp        0     64 ip-172-31-36-254.us:ssh c-75-64-225-206.h:50439 ESTABLISHED
udp        0      0 ip-172-31-36-254:bootpc ip-172-31-32-1.u:bootps ESTABLISHED
Active UNIX domain sockets (w/o servers)
Proto RefCnt Flags       Type       State         I-Node   Path
unix  2      [ ]         DGRAM                    226322   /var/run/chrony/chronyd.sock
unix  3      [ ]         DGRAM                    11819    /run/systemd/notify


[ec2-user@ip-172-31-36-254 ~]$ netstat -rnv
Kernel IP routing table
Destination     Gateway         Genmask         Flags   MSS Window  irtt Iface
0.0.0.0         172.31.32.1     0.0.0.0         UG        0 0          0 eth0
172.31.32.0     0.0.0.0         255.255.240.0   U         0 0          0 eth0


free - Display amount of free and used memory in the system

[ec2-user@ip-172-31-36-254 ~]$ free
              total        used        free      shared  buff/cache   available
Mem:         835572      165356      157196       33276      513020      477016
Swap:             0           0           0

/proc/cpuinfo - CPU information

[ec2-user@ip-172-31-36-254 ~]$ cat /proc/cpuinfo
processor       : 0
vendor_id       : GenuineIntel
cpu family      : 6
model           : 63
model name      : Intel(R) Xeon(R) CPU E5-2676 v3 @ 2.40GHz
stepping        : 2
microcode       : 0x43
cpu MHz         : 2399.850
cache size      : 30720 KB
physical id     : 0
siblings        : 1
core id         : 0
cpu cores       : 1
apicid          : 0
initial apicid  : 0
fpu             : yes
fpu_exception   : yes
cpuid level     : 13
wp              : yes
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx rdtscp lm constant_tsc rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm cpuid_fault invpcid_single pti fsgsbase bmi1 avx2 smep bmi2 erms invpcid xsaveopt
bugs            : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit
bogomips        : 4800.08
clflush size    : 64
cache_alignment : 64
address sizes   : 46 bits physical, 48 bits virtual
power management:


/proc/meminfo - Memory information

[ec2-user@ip-172-31-36-254 ~]$ cat /proc/meminfo
MemTotal:         835572 kB
MemFree:          157344 kB
MemAvailable:     477240 kB
Buffers:            2716 kB
Cached:           411536 kB


History command - Shell history 
Very effective command for system admins to troubleshoot
Who did what?

Commands current logged-in user executed since system was built for the first time

[ec2-user@ip-172-31-36-254 ~]$ history | more
    1  ls -ltr
    2  pwd
    3  whoami
    4  exit
    5  ls -ltr
    6  su -

[ec2-user@ip-172-31-36-254 ~]$ history | grep awk
  686  man awk
  690  awk '{print;}' employee.txt
  691  awk '/Thomas/ /Nisha/' employee.txt
  692  awk '/Thomas/' employee.txt
  693  awk '/Thomas/
  695  awk '/Thomas/
  697  awk '/Thomas/
  699  awk '{print $1;}' employee.txt
  700  awk '{print $2,$5;}' employee.txt
  701  cat employee.txt | awk {'print $2'}
  702  awk '{print $2,$NF;}' employee.txt
  703  awk '$1 >200' employee.txt
  704  awk '$4 ~/Technology/' employee.txt
  708  cat seinfeld-characters | awk {'print $2'} | sort
  709  cat seinfeld-characters | awk {'print $2'} | sort | uniq
  710  cat seinfeld-characters | awk {'print $2'} | uniq
  711  cat seinfeld-characters | awk {'print $2'}
  712  cat seinfeld-characters | awk {'print $2'} | uniq -d
  713  cat seinfeld-characters | awk {'print $2'} | uniq -u
  716  cat seinfeld-characters | awk {'print $2'}
  717  cat seinfeld-characters | awk {'print $2'} | uniq -u
  718  cat seinfeld-characters | awk {'print $2'} | sort | uniq -u
  719  cat seinfeld-characters | awk {'print $2'} | sort
  720  cat seinfeld-characters | awk {'print $2'} | sort | uniq -d


To see history of other user 

sudo vi /home/<USER_YOU_WANT_TO_VIEW>/.bash_history

Commands user ec1-user executed since system was built for the first time


[ec2-user@ip-172-31-36-254 ~]$ sudo cat /home/ec1-user/.bash_history
exit
su -
su
clear
vi /etc/ssh/sshd_config
cat /etc/ssh/sshd_config
sudo cat /etc/ssh/sshd_config
exit
ls -ltr
touch new
ls -ltr
clear
ifconfig
man ifconfig
ip
ip addr show


xargs - Take output of a command and passes it as argument of another command. If no command is specified, xargs executes echo by default. 
You many also instruct it to read data from a file instead of stdin.

1) Convert muti-line output from ls command into single line using xargs as follows. 

[929354@lab-netbox netbox]$ ls -1
api
auth
compress_logs.log
compress_logs.sh
view

[929354@lab-netbox netbox]$ ls -1 | xargs
api auth compress_logs.log compress_logs.sh view

2) To know the number of lines/words/characters in each file in the list, you can use ls command and xargs for this purpose as follows.

[929354@lab-netbox view]$ wc view
 1  8 49 view

[929354@lab-netbox view]$ wc view view.2020-09-22
  1   8  49 view
  6  56 376 view.2020-09-22
  7  64 425 total

[929354@lab-netbox view]$ ls -1 | xargs wc
   1    8   49 view
   2    3   88 view.2020-09-08.gz
   2    3  107 view.2020-09-09.gz
   2    2   83 view.2020-09-10.gz
   1    6  164 view.2020-09-11.gz
   2    3  102 view.2020-09-14.gz
   0    2   82 view.2020-09-15.gz
   2    3  144 view.2020-09-16.gz
   0    2  137 view.2020-09-18.gz
   1   10   77 view.2020-09-21
   6   56  376 view.2020-09-22
  19   98 1409 total


-------------------------------------------------------------------------
Rename – Renaming Multiple Files in Linux--

We often use “mv” command to rename a single file in Linux.
The rename command is used to rename multiple or group of files, rename files to lowercase, rename files to uppercase and overwrite files using perl expressions.

rename [ -v ] [ -n ] [ -f ] perlexpr [ files ]

-v: Print names of files successfully renamed.
-n: Show what files would have been renamed.
-f: Force overwrite existing files.
perlexpr: Perl Expression.

1) Change the extension of all files from “.html” to “.php“. 

$ rename 's/\.html$/\.php/' *.html
 
2) Convert all *.html filenames from Lower to upper case 

$ rename 'y/a-z/A-Z/' *.html
 
3) Convert all *.HTML filenames from upper to lower case 

$ rename 'y/A-Z/a-z/' *.HTML

4) Capitalize only first letter of each filename

$ rename 's/\b(\w)/\U$1/g' *.ext


-------------------------------------------------------------------------










































































































